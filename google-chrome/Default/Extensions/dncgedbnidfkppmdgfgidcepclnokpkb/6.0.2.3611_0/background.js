var Xe=Object.create;var oe=Object.defineProperty;var Qe=Object.getOwnPropertyDescriptor;var Ze=Object.getOwnPropertyNames,Ie=Object.getOwnPropertySymbols,Je=Object.getPrototypeOf,_e=Object.prototype.hasOwnProperty,et=Object.prototype.propertyIsEnumerable;var Se=(t,e,o)=>e in t?oe(t,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[e]=o,K=(t,e)=>{for(var o in e||(e={}))_e.call(e,o)&&Se(t,o,e[o]);if(Ie)for(var o of Ie(e))et.call(e,o)&&Se(t,o,e[o]);return t};var tt=t=>oe(t,"__esModule",{value:!0});var ot=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var nt=(t,e,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of Ze(e))!_e.call(t,n)&&n!=="default"&&oe(t,n,{get:()=>e[n],enumerable:!(o=Qe(e,n))||o.enumerable});return t},Re=t=>nt(tt(oe(t!=null?Xe(Je(t)):{},"default",t&&t.__esModule&&"default"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);var ve=ot((gn,fe)=>{"use strict";var xt=Object.prototype.hasOwnProperty,C="~";function Z(){}Object.create&&(Z.prototype=Object.create(null),new Z().__proto__||(C=!1));function Ht(t,e,o){this.fn=t,this.context=e,this.once=o||!1}function Pe(t,e,o,n,r){if(typeof o!="function")throw new TypeError("The listener must be a function");var s=new Ht(o,n||t,r),i=C?C+e:e;return t._events[i]?t._events[i].fn?t._events[i]=[t._events[i],s]:t._events[i].push(s):(t._events[i]=s,t._eventsCount++),t}function le(t,e){--t._eventsCount==0?t._events=new Z:delete t._events[e]}function E(){this._events=new Z,this._eventsCount=0}E.prototype.eventNames=function(){var e=[],o,n;if(this._eventsCount===0)return e;for(n in o=this._events)xt.call(o,n)&&e.push(C?n.slice(1):n);return Object.getOwnPropertySymbols?e.concat(Object.getOwnPropertySymbols(o)):e};E.prototype.listeners=function(e){var o=C?C+e:e,n=this._events[o];if(!n)return[];if(n.fn)return[n.fn];for(var r=0,s=n.length,i=new Array(s);r<s;r++)i[r]=n[r].fn;return i};E.prototype.listenerCount=function(e){var o=C?C+e:e,n=this._events[o];return n?n.fn?1:n.length:0};E.prototype.emit=function(e,o,n,r,s,i){var l=C?C+e:e;if(!this._events[l])return!1;var a=this._events[l],m=arguments.length,p,h;if(a.fn){switch(a.once&&this.removeListener(e,a.fn,void 0,!0),m){case 1:return a.fn.call(a.context),!0;case 2:return a.fn.call(a.context,o),!0;case 3:return a.fn.call(a.context,o,n),!0;case 4:return a.fn.call(a.context,o,n,r),!0;case 5:return a.fn.call(a.context,o,n,r,s),!0;case 6:return a.fn.call(a.context,o,n,r,s,i),!0}for(h=1,p=new Array(m-1);h<m;h++)p[h-1]=arguments[h];a.fn.apply(a.context,p)}else{var V=a.length,_;for(h=0;h<V;h++)switch(a[h].once&&this.removeListener(e,a[h].fn,void 0,!0),m){case 1:a[h].fn.call(a[h].context);break;case 2:a[h].fn.call(a[h].context,o);break;case 3:a[h].fn.call(a[h].context,o,n);break;case 4:a[h].fn.call(a[h].context,o,n,r);break;default:if(!p)for(_=1,p=new Array(m-1);_<m;_++)p[_-1]=arguments[_];a[h].fn.apply(a[h].context,p)}}return!0};E.prototype.on=function(e,o,n){return Pe(this,e,o,n,!1)};E.prototype.once=function(e,o,n){return Pe(this,e,o,n,!0)};E.prototype.removeListener=function(e,o,n,r){var s=C?C+e:e;if(!this._events[s])return this;if(!o)return le(this,s),this;var i=this._events[s];if(i.fn)i.fn===o&&(!r||i.once)&&(!n||i.context===n)&&le(this,s);else{for(var l=0,a=[],m=i.length;l<m;l++)(i[l].fn!==o||r&&!i[l].once||n&&i[l].context!==n)&&a.push(i[l]);a.length?this._events[s]=a.length===1?a[0]:a:le(this,s)}return this};E.prototype.removeAllListeners=function(e){var o;return e?(o=C?C+e:e,this._events[o]&&le(this,o)):(this._events=new Z,this._eventsCount=0),this};E.prototype.off=E.prototype.removeListener;E.prototype.addListener=E.prototype.on;E.prefixed=C;E.EventEmitter=E;typeof fe!="undefined"&&(fe.exports=E)});function rt(){let t=chrome.runtime.getManifest();function e(o){let n,r=null;if(o){for(let s=0;s<o.length;++s)if(n=o[s],typeof n=="object"&&"usbDevices"in n){r=n.usbDevices;break}}return r}return e(t.permissions)||e(t.optional_permissions)||[]}var ne={getSupportedDevices:rt};function d(t){let{lastError:e}=chrome.runtime;Error.call(this,e.message),this.message=e.message,this.lastError=e,t&&(this.message=`${t}:${this.message}`)}d.prototype=Object.create(Error.prototype);d.check=function(e,o){let n=!!chrome.runtime.lastError;return n&&e(new d(o)),!n};var{usb:A}=chrome,st=129,it=2,ct=4096,ue=!1,lt=ne.getSupportedDevices();console.assert(chrome&&chrome.usb);var z=function(){let t={};function e(r){let s=r.handle;return t[s]={handle:r},s}function o(r){delete t[r]}function n(r){let s=t[r];return s&&s.handle}return{add:e,remove:o,get:n}}();function at(){return new Promise((t,e)=>{chrome.usb.getDevices({filters:lt},o=>{chrome.runtime.lastError?e(new d):t(o)})})}function dt(t){return new Promise((e,o)=>{function n(r){ue&&(console.dir("Opening USBBULK device: "),console.log(r)),A.openDevice(r,s=>{let i=1;chrome.runtime.lastError?o(new d):(ue&&(console.log("USBBULK: Device Opened:"),console.dir(s)),A.setConfiguration(s,i,()=>{chrome.runtime.lastError?o(new d):A.resetDevice(s,l=>{chrome.runtime.lastError?o(new d):l?A.claimInterface(s,0,()=>{chrome.runtime.lastError?o(new d):(ue&&console.log("USBBULK: Claimed USB interface 0"),e(z.add(s)))}):o(new Error("Failed to reset USB device"))})}))})}at().then(r=>{let s,i;for(i=0;!s&&i<r.length;++i)r[i].device===t&&(s=r[i]);s?n(s):o(new Error(`Failed to locate device, id=${t}`))}).catch(o)})}function ut(t){return new Promise((e,o)=>{let n=z.get(t);console.assert(n),A.releaseInterface(n,0,()=>{chrome.runtime.lastError?o(new d):A.closeDevice(n,()=>{chrome.runtime.lastError?o(new d):(z.remove(n),e())})})})}function ht(t,e){return new Promise((o,n)=>{let r={direction:"out",endpoint:it,data:e},s=z.get(t);s?A.bulkTransfer(s,r,i=>{chrome.runtime.lastError?n(new d):i.resultCode!==0?n(new Error(`USBBULK: OUT Transfer returned resultCode=${i.resultCode}`)):o(i)}):n(new Error(`USBBULK: Unable to get connection for id=${t}`))})}function ft(t){return new Promise((e,o)=>{let n={direction:"in",endpoint:st,length:ct},r=z.get(t);r?A.bulkTransfer(r,n,s=>{chrome.runtime.lastError?o(new d):s.resultCode!==0?o(new Error(`USBBULK: OUT Transfer returned resultCode=${s.resultCode}`)):e(s.data)}):o(new Error(`USBBULK: Unable to get connection for id=${t}`))})}var Le={connect:dt,disconnect:ut,send:ht,receive:ft};var re=function(t){return d.check(t)};console.assert(chrome&&chrome.hid);var se=function(){let t={};function e(r,s,i){t[r]={reportSize:s||0,stripReportId:!!i,pending:[],residual:null}}function o(r){return t[r]}function n(r){delete t[r]}return{add:e,get:o,remove:n}}();function vt(t,e){e=e||[0,0];let o=e[0],n=!!e[1];return new Promise((r,s)=>{chrome.hid.connect(t,i=>{re(s)&&(se.add(i.connectionId,o,n),r(i.connectionId))})})}function gt(t){return new Promise((e,o)=>{chrome.hid.disconnect(t,()=>{se.remove(t),re(o)&&e()})})}function pt(t,e){let{stripReportId:o}=e,{reportSize:n}=e;if(e.residual){let p=new Uint8Array(e.residual.byteLength+t.byteLength);p.set(new Uint8Array(e.residual)),p.set(new Uint8Array(t),e.residual.byteLength),t=p.buffer,e.residual=null}n<=0&&(n=t.byteLength);let r=t.byteLength,s=Math.floor(r/n),i=0,l=[],a=Math.floor(r%n);a>0&&(e.residual=t.slice(r-a));let m=new Uint8Array(t);for(let p=0;p<s;++p){let h=o?m[i]:0,V=o?i+1:i,_=i+n;l.push({reportId:h,data:t.slice(V,_)}),i+=n}return l}function mt(t,e){let o=se.get(t),n=pt(e,o),r=s=>{o.pending.forEach(i=>{i.reject(s)})};return new Promise((s,i)=>{o.pending.push({resolve:s,reject:i,reports:n});let l=function(a,m){let p=function(){let h=a.shift();h?chrome.hid.send(t,h.reportId,h.data,()=>{re(r)&&p()}):(m(),o.pending.shift(),o.pending.length>0&&l(o.pending[0].reports,o.pending[0].resolve))};p()};o.pending.length===1&&l(o.pending[0].reports,o.pending[0].resolve)})}function Et(t){let e=se.get(t);return new Promise((o,n)=>{chrome.hid.receive(t,(r,s)=>{if(re(n)){let i=s;e.stripReportId&&(i=new Uint8Array(s.byteLength+1),i[0]=r,i.set(new Uint8Array(s),1),i=i.buffer),o(i)}})})}var ie={connect:vt,disconnect:gt,send:mt,receive:Et};var bt=ne.getSupportedDevices();console.assert(chrome&&chrome.usb);var x=function(){let t={};function e(r,s,i){let l=r.handle,a={direction:"in",endpoint:i.address,length:i.maximumPacketSize};t[l]={handle:r,hidInterface:s,hidEndpoint:i,interfaceNumber:s.interfaceNumber,transferIN:a}}function o(r){delete t[r]}function n(r){return t[r]}return{add:e,remove:o,get:n}}();function wt(){return new Promise((t,e)=>{chrome.usb.getDevices({filters:bt},o=>{chrome.runtime.lastError?e(new d):t(o)})})}function Ct(t){return t[0]}function Dt(t){return t?t.endpoints[0]:null}function yt(t){return new Promise((e,o)=>{function n(r){chrome.usb.openDevice(r,s=>{chrome.runtime.lastError?o(new d):chrome.usb.listInterfaces(s,i=>{let l=null,a=null;chrome.runtime.lastError?o(new d):(l=Ct(i),a=Dt(l),!l||!a?o(l?new Error("Unable to locate HID Endpoint for device interface"):new Error("Unable to locate HID interface for device")):chrome.usb.resetDevice(s,m=>{chrome.runtime.lastError?o(new d):m?chrome.usb.claimInterface(s,l.interfaceNumber,()=>{chrome.runtime.lastError?o(new d):(x.add(s,l,a),e(s.handle))}):o(new Error("Failed to reset USB device"))}))})})}wt().then(r=>{let s,i;for(i=0;!s&&i<r.length;++i)r[i].device===t&&(s=r[i]);s?n(s):o(new Error(`Failed to locate device id=${t}`))}).catch(r=>{o(r)})})}function It(t){return new Promise((e,o)=>{let n=x.get(t);console.assert(n);let r=function(i){x.remove(n),e(i)},s=function(i){x.remove(n),o(i)};chrome.usb.releaseInterface(n.handle,n.interfaceNumber,()=>{chrome.runtime.lastError?s(new d):chrome.usb.closeDevice(n.handle,()=>{chrome.runtime.lastError?s(new d):r()})})})}function _t(t,e){return{direction:"out",recipient:"interface",requestType:"class",request:9,value:32|(t|0),index:0,data:e}}function St(t,e){let o=0;return new Promise((n,r)=>{let s=_t(o,e),i=x.get(t);console.assert(i),chrome.usb.controlTransfer(i.handle,s,l=>{chrome.runtime.lastError?r(new d):l.resultCode!==0?r(new Error(`USB Control OUT Transfer returned resultCode=${l.resultCode}`)):n()})})}function Rt(t){return new Promise((e,o)=>{let n=x.get(t);n?chrome.usb.interruptTransfer(n.handle,n.transferIN,r=>{chrome.runtime.lastError?o(new d):r.resultCode!==0?o(new Error(`USB Interrupt IN Transfer returned resultCode=${r.resultCode}`)):e(r.data)}):o(new Error(`Unable to get connection for id=${t}`))})}var Ae={connect:yt,disconnect:It,send:St,receive:Rt};var T,q=[ie,Ae];function Lt(t,e){return e=t?e>>16:e,e&=65535,e}function Be(t,e){return function(o){return o=Lt(t,o),e(o)}}function At(t){let e=function(o,n){return new Promise(r=>{n=Be(o,n),n(t).then(r).catch(()=>r(null))})};return new Promise((o,n)=>{let r=q.map((s,i)=>e(i,s.connect));Promise.all(r).then(s=>{let i=null;s.forEach((l,a)=>{l!==null&&(i===null?(i=l,console.debug(`[*****] Using api: ${a===0?"HID":"USB/HID"}`),T.connect=Be(a,q[a].connect),T.disconnect=q[a].disconnect,T.send=q[a].send,T.receive=q[a].receive):console.error("HID: Connected on both USB and HID APIs, this is a failed assertion"))}),i!==null?o(i):n(new Error(`Failed to connect to HID deviceId=${t}`))})})}function he(t){return function(){return Promise.reject(new Error(`HID api not setup: ${t}`))}}T={connect:At,disconnect:he("disconnect"),send:he("send"),receive:he("receive")};var ke=[Le,ie,T],L=!1;function B(t){this.send=t,this._onReceive=this._onReceiveHandshake,this.driver=null,this.deviceId=null,this.connectionId=null}function Bt(t){let e,o,n,r=[0,0],s=null;return t.byteLength===10?(e=new DataView(t,0,3),o=new DataView(t,3,1).getUint8(0),n=new DataView(t,4,4).getUint32(0),r[0]=new DataView(t,8,1).getUint8(0),r[1]=new DataView(t,9,1).getUint8(0),e.getUint8(0)===118&&e.getUint8(1)===115&&e.getUint8(2)===116?o>=0&&o<ke.length&&(s={driverId:o,driver:ke[o],deviceId:n,params:r}):console.error("Device Client: Magic number didn't match")):console.error("Device Client: Handshake packet is incorrect size"),s}B.prototype._onReceiveHandshake=function(t){let e=this;L&&(console.log("Device Client: Handshake: "),console.log(new Uint8Array(t)));let o=Bt(t);L&&(console.log("Device Client: Handshake Result:"),console.dir(o)),o&&(e.driver=o.driver,e.deviceId=o.deviceId,e.params=o.params,console.assert(e.driver),L&&console.log(`Device Client: Opening device: id=${e.deviceId}`),e.driver.connect(e.deviceId,e.params).then(n=>{let r=new Uint8Array([0]);e.connectionId=n,L&&(console.log("Device Client: device opened, sending success result for handshake"),console.log(`Device Client: ConnectionId: ${n}`)),e._onReceive=e._onReceiveDeviceIO,e.send(r.buffer).then(s=>{L&&(console.log("Device opened: ready for communication"),console.log("Data Sent to client:"),console.dir(s));let i=function(){e.driver.receive(e.connectionId).then(l=>{L&&(console.log("Data Received from device:"),console.dir(new Uint8Array(l))),e.send(l).then(a=>{L&&(console.log("Data Sent to client:"),console.dir(a)),i()},a=>{console.error("Device Client: Poll Loop, send"),console.error(a),e.onError(a)})}).catch(l=>{console.error("Device Client: USB device receive"),console.error(l),e.onError(l)})};i()})}).catch(n=>{let r=new Uint8Array([-1]);console.error("Device Client: connect"),console.error(n),console.log("Device Client: Device failed to open, sending failure result"),e.send(r.buffer).then(()=>{}),e.onError(n)}))};B.prototype._onReceiveDeviceIO=function(t){console.assert(this.driver),console.assert(this.connectionId),this.driver.send(this.connectionId,t).then(()=>{L&&console.log("Device Client: USB Transfer Written")},e=>{console.error("Device Client: driver.send"),console.error(e)})};B.prototype.onReceive=function(t){this._onReceive&&this._onReceive(t)};B.prototype.onReceiveError=function(t){console.error(`Device Client: onReceiveError, resultCode=${t}`)};B.prototype.onClose=function(){this.driver&&typeof this.connectionId=="number"&&(L&&console.log(`Device Client: Disconnecting USB Device, connectionId=${this.connectionId}`),this.driver.disconnect(this.connectionId),this.driver=null,this.deviceId=null,this.connectionId=null,this._onReceive=null)};B.prototype.onError=function(t){console.error("Device Client: error"),console.error(t),this.onClose()};var X=!1,{tcpServer:Q}=chrome.sockets,{tcp:H}=chrome.sockets,w={socketId:null,socketInfo:null,clients:{}};function F(t){let e=!0;return chrome.runtime.lastError&&(console.error(`Device Server: Error in ${t}`),console.error(chrome.runtime.lastError),e=!1),e}function kt(t){return function(e){return new Promise((o,n)=>{H.send(t,e,r=>{F("tcp.send")?o(r):n(new Error("TCP Send Error"))})})}}function Pt(t){let e=null;X&&(console.log("Device Server: TCP Client Accepted:"),console.dir(t)),e=new B(kt(t.clientSocketId)),w.clients[t.clientSocketId]=e,H.setPaused(t.clientSocketId,!1,()=>{F("tcp.setPaused(false)")&&X&&console.log("Device Server: Client Socket Ready.")})}function $t(t){F("tcpServer.onAcceptError")&&(console.error("Device Server: TCP Accept Error:"),console.error(t))}function Ut(t){let e;X&&(console.log(`Device Server: Client Received (${t.socketId})`),console.dir(t),console.log(new Uint8Array(t.data))),e=w.clients[t.socketId],e&&e.onReceive(t.data)}function Tt(t){let e=w.clients[t.socketId];e&&(console.error("Device Server: TCP Receive Error"),console.error(t),e.onReceiveError(t.resultCode),H.close(t.socketId,()=>{e&&e.onClose(),delete w.clients[t.socketId]}))}function Ot(){function t(o){return function(n){F("tcpServer")&&n.socketId===w.socketId&&o(n)}}function e(o){return function(n){F("tcp")&&o(n)}}Q.onAccept.addListener(t(Pt)),Q.onAcceptError.addListener(t($t)),H.onReceive.addListener(e(Ut)),H.onReceiveError.addListener(e(Tt))}function Nt(){let t="127.0.0.1",e=0,o=5;return Ot(),new Promise((n,r)=>{Q.create({name:"vst-device-server",persistent:!1},s=>{w.socketId=s.socketId,X&&(console.log("Device Server: Created..."),console.dir(s)),Q.listen(w.socketId,t,e,o,i=>{i>=0?Q.getInfo(w.socketId,l=>{w.socketInfo=l,X&&(console.log(`Device Server: Listening on port ${l.localPort}`),console.dir(l)),n(l)}):r(new Error(`Device Server: Failed to listen to socket: errcode=${i}`))})})})}function Vt(){Object.keys(w.clients).forEach(t=>{w.clients[t].onClose(),H.close(t,()=>{F("tcp.close"),console.log(`Connection Closed: socketId=${t}`)})}),w.clients={}}var ce={start:Nt,disconnectAll:Vt,_server:w,getPort:()=>w.socketInfo?w.socketInfo.localPort:0};var xe=Re(ve());var W=Symbol("priv"),ge=class{constructor({uuid:e,isPrimary:o,instanceId:n}){e=e.toLowerCase(),this[W]={instanceId:n,uuid:e,isPrimary:o,_characteristics:{}}}get uuid(){return this[W].uuid}get isPrimary(){return this[W].isPrimary}get instanceId(){return this[W].instanceId}get characteristics(){return K({},this[W]._characteristics)}addCharacteristic(e){let{uuid:o}=e;this[W]._characteristics[o]=e}};var $e=Re(ve()),S=Symbol("priv"),Ft="GDX",Ue="GWHR",Wt="SPEC",Mt=t=>{let e=null;return t.name.startsWith("GDX-")&&(e=Ft),e},Gt=t=>{let e=null;return t.uuids.forEach(o=>{o=o.toLowerCase(),(o.startsWith("0000180d")||o.startsWith("180d"))&&(e=Ue)}),e||t.name.startsWith("Polar")&&(e=Ue),e},jt=t=>{let e=null;return t.name.startsWith("Spec")&&(e=Wt),e},pe=class extends $e.default{constructor(){super();this[S]={devices:[],deviceFilters:[]},this.addDeviceFilter(Mt),this.addDeviceFilter(Gt),this.addDeviceFilter(jt)}addDeviceFilter(e){e&&this[S].deviceFilters.push(e)}getSupportedDeviceType(e){let o=null;return this[S].deviceFilters.forEach(n=>{o||(o=n(e))}),o}get devices(){return this[S].devices.slice()}get(e){return this[S].devices.find(o=>o.address===e)}getById(e){return this[S].devices.find(o=>o.id===e)}getCharacteristicById(e){let{devices:o}=this[S];for(let n=0;n<o.length;++n){let s=o[n].characteristics,i=Object.keys(s);for(let l=0;l<i.length;++l){let a=s[i[l]];if(a.id===e)return a}}return null}add(e){let o=this.getSupportedDeviceType(e);if(!!o){if(this.get(e.address)){console.warn(`Bluetooth: Device (add) already added: ${e.address}`),console.dir(e);return}e.type=o,this[S].devices.push(e),this.emit("device-discovered",e)}}remove(e){if(!this.getSupportedDeviceType(e))return;let o=this.get(e.address);if(!o){console.warn(`Bluetooth: Device (remove) not found: ${e.address}`),console.dir(e);return}this[S].devices=this[S].devices.filter(n=>n.address!==e.address),this.emit("device-removed",o)}update(e){if(!this.getSupportedDeviceType(e))return;let o=this.get(e.address);if(!o){console.warn(`Bluetooth: Device (update) not found: ${e.address}`);return}let n=o.updateFromChromeDevice(e);n&&this.emit("device-updated",{device:o,props:n})}},u=new pe;pe.prototype._enable_logging=function(){this.on("device-discovered",e=>{console.log(`*** Bluetooth Device Discovered: ${e.name}, addr=${e.address}`),console.dir(e)}),this.on("device-removed",e=>{console.log(`*** Bluetooth Device Removed: ${e.name}, addr=${e.address}`),console.dir(e)}),this.on("device-updated",({device:e,props:o})=>{console.log(`*** Bluetooth Device Updated: ${e.name}, addr=${e.address}`),console.dir(e),console.dir(o)})};var v=!1,k=function(t,e){return d.check(t,e)};console.assert(chrome);function Te(t){let{service:e}=t;v&&console.log(`BLE: Characteristic Found: ${t.uuid}`);let o=u.get(e.deviceAddress);o?o.lookupCharacteristic(t.uuid)||o.addChromeCharacteristic(t):console.error(`BLE: failed to find device for addr=${e.deviceAddress}`)}function Oe(t){return new Promise((e,o)=>{let n=o;v&&(console.log(`BLE: getCharacteristics for serviceId=${t}`),n=r=>{console.error(`BLE: getCharacteristics for serviceId=${t}`),console.error(r),o(r)}),chrome.bluetoothLowEnergy?chrome.bluetoothLowEnergy.getCharacteristics(t,r=>{k(n,"ble.getCharacteristics")&&(r=r||[],v&&(console.log(`BLE: service (id=${t}) characteristics:`),console.dir(r)),e(r))}):n(new Error("chrome.bluetoothLowEnergy API not found"))})}function Ne(t){let e=u.get(t)||{};return new Promise((o,n)=>{chrome.bluetoothLowEnergy?chrome.bluetoothLowEnergy.getServices(t,r=>{if(k(n,"ble.getServices")){r=r||[],v&&(console.log(`BLE: ${t} services: `),console.dir(r)),r.length===0?e.setupInterval||(e.setupInterval=setInterval(()=>{Ne(t).then(o).catch(()=>{e=u.get(t),e&&e.clearSetupInterval()})},1e3)):e&&e.clearSetupInterval();let s=[];r.forEach(i=>{e.lookupService(i.uuid)||e.addChromeService(i),s.push(Oe(i.instanceId))}),Promise.all(s).then(i=>{i.forEach(l=>{l.forEach(Te)}),v&&console.log(`BLE: Device ${t} SETUP`),o(e)}).catch(n)}}):n(new Error("chrome.bluetoothLowEnergy API not found"))})}function Ve(t){let e=t.address;return new Promise((o,n)=>{v&&console.log(`BLE: ${e} disconnecting...`),t&&t.clearSetupInterval(),chrome.bluetoothLowEnergy?chrome.bluetoothLowEnergy.disconnect(e,()=>{let r=u.get(e);r.onDisconnect(),k(n,"ble.disconnect")&&(v&&console.log(`BLE: ${e} disconnected`),o(r))}):n(new Error("chrome.bluetoothLowEnergy API not found"))})}function Yt(t){let e=t.address;return new Promise((o,n)=>{v&&console.log(`BLE: ${e} connecting...`),chrome.bluetoothLowEnergy?chrome.bluetoothLowEnergy.connect(e,()=>{k(n,"ble.connect")&&(v&&console.log(`BLE: ${e} connected`),Ne(e).then(o).catch(r=>{console.error(`BLE: ${e} failed to setup device`),console.error(r);let s=()=>n(r);Ve(t).then(s,s)}))}):n(new Error("chrome.bluetoothLowEnergy API not found"))})}function Kt(t){let e=t.instanceId;return new Promise((o,n)=>{v&&console.log(`BLE: reading characteristic (${t.id}) id=${e}`),chrome.bluetoothLowEnergy?chrome.bluetoothLowEnergy.readCharacteristicValue(e,r=>{k(n,"ble.readCharacteristicValue")&&(v&&(console.log(`BLE: characteristic id=${e} read:`),console.dir(r),console.dir(new Uint8Array(r.value))),o(r.value))}):n(new Error("chrome.bluetoothLowEnergy API not found"))})}function zt(t,e){let o=t.instanceId;return new Promise((n,r)=>{v&&(console.log(`BLE: writing characteristic (${t.id}) id=${o}`),console.dir(new Uint8Array(e))),chrome.bluetoothLowEnergy?chrome.bluetoothLowEnergy.writeCharacteristicValue(o,e,()=>{k(r,"ble.writeCharacteristicValue")&&(v&&console.log(`BLE: characteristic id=${o} written`),n())}):r(new Error("chrome.bluetoothLowEnergy API not found"))})}function qt(t){let e=t.instanceId;return new Promise((o,n)=>{v&&console.log(`BLE: starting notifications on characteristic (${t.id}) id=${e}`),chrome.bluetoothLowEnergy?chrome.bluetoothLowEnergy.startCharacteristicNotifications(e,()=>{k(n,"ble.startCharacteristicNotifications")&&(v&&console.log(`BLE: notifications started on characteristic id=${e}`),o())}):n(new Error("chrome.bluetoothLowEnergy API not found"))})}function Xt(t){let e=t.instanceId;return new Promise((o,n)=>{v&&console.log(`BLE: stopping notifications on characteristic (${t.id}) id=${e}`),chrome.bluetoothLowEnergy?chrome.bluetoothLowEnergy.stopCharacteristicNotifications(e,()=>{k(n,"ble.stopCharacteristicNotifications")&&(v&&console.log(`BLE: notifications stopped on characteristic id=${e}`),o())}):n(new Error("chrome.bluetoothLowEnergy API not found"))})}function Qt(t){v&&(console.log(`BLE: Service ${t.uuid} ADDED, id=${t.instanceId}, addr=${t.deviceAddress}`),console.dir(t));let e=u.get(t.deviceAddress);e?(e.clearSetupInterval(),e.lookupService(t.uuid)||e.addChromeService(t),Oe(t.instanceId).then(o=>{o.forEach(Te)}).catch(o=>{console.error(`BLE: onService Added: failed to get characteristics for service ${t.uuid}`),console.error(o)})):console.error(`BLE: failed to find device for addr=${t.deviceAddress}`)}function Zt(t){v&&(console.log(`BLE: Service ${t.uuid} CHANGED, id=${t.instanceId}, addr=${t.deviceAddress}`),console.dir(t))}function Jt(t){v&&(console.log(`BLE: Service ${t.uuid} REMOVED, id=${t.instanceId}, addr=${t.deviceAddress}`),console.dir(t))}function eo(t){v&&(console.log(`BLE: Descriptor ${t.uuid} Value Changed: `),console.dir(new Uint8Array(t.value)))}function to(t){v&&(console.log(`BLE: characteristic value changed id=${t.instanceId}`),console.dir(t),console.dir(new Uint8Array(t.value)));let e=null,{service:o}=t;o&&(e=u.get(o.deviceAddress)),e?e.onCharacteristicValueChanged(t.uuid,t.value):console.error(`BLE: Failed to locate device for characteristic id=${t.instanceId}`)}chrome.bluetoothLowEnergy&&(chrome.bluetoothLowEnergy.onServiceAdded.addListener(Qt),chrome.bluetoothLowEnergy.onServiceChanged.addListener(Zt),chrome.bluetoothLowEnergy.onServiceRemoved.addListener(Jt),chrome.bluetoothLowEnergy.onDescriptorValueChanged.addListener(eo),chrome.bluetoothLowEnergy.onCharacteristicValueChanged.addListener(to));var D={connect:Yt,disconnect:Ve,readCharacteristicValue:Kt,writeCharacteristicValue:zt,startCharacteristicNotifications:qt,stopCharacteristicNotifications:Xt};var P=Symbol("priv"),oo=1,me=class{constructor({uuid:e,service:o,canRead:n,canWrite:r,canNotify:s,instanceId:i}){this[P]={id:oo++,uuid:e,service:o,canRead:n,canWrite:r,canNotify:s,instanceId:i},o&&o.addCharacteristic(this)}get id(){return this[P].id}get uuid(){return this[P].uuid}get service(){return this[P].service}get canRead(){return this[P].canRead}get canWrite(){return this[P].canWrite}get canNotify(){return this[P].canNotify}get instanceId(){return this[P].instanceId}read(){return console.assert(this.canRead),D.readCharacteristicValue(this)}write(e){return console.assert(this.canWrite),D.writeCharacteristicValue(this,e)}startNotify(){return console.assert(this.canNotify),D.startCharacteristicNotifications(this)}stopNotify(){return console.assert(this.canNotify),D.stopCharacteristicNotifications(this)}};var g=Symbol("priv"),no=1,J=class extends xe.default{constructor({address:e,name:o="",connected:n=!1,connecting:r=!1,connectable:s=!1,inquiryRssi:i=0,uuids:l=[]}){super();this.setupInterval=null,this[g]={id:no++,type:"",address:e,name:o,connected:n,connecting:r,connectable:s,inquiryRssi:i,uuids:l,_services:{},_characteristics:{}}}get id(){return this[g].id}get type(){return this[g].type}set type(e){this[g].type=e}get address(){return this[g].address}get name(){return this[g].name}get connected(){return this[g].connected}get connecting(){return this[g].connecting}get connectable(){return this[g].connectable}get inquiryRssi(){return this[g].inquiryRssi}get uuids(){return Array.from(this[g].uuids)}get services(){return K({},this[g]._services)}get characteristics(){return K({},this[g]._characteristics)}clearSetupInterval(){this.setupInterval&&(clearInterval(this.setupInterval),this.setupInterval=null)}onDisconnect(){console.debug(`BLEDevice: ${this.name} disconnected, removing cached services and characteristics`),this[g]._services={},this[g]._characteristics={},this.clearSetupInterval()}lookupService(e){return this[g]._services[e.toLowerCase()]}lookupCharacteristic(e){let o=e.toLowerCase();return o.length<=8&&(o.length===4&&(o=`0000${o}`),o+="-0000-1000-8000-00805f9b34fb"),this[g]._characteristics[o]}onCharacteristicValueChanged(e,o){let n=e.toLowerCase(),r=this[g]._characteristics[n];r?this.emit("characteristic-value-changed",{characteristic:r,value:o}):console.warn(`BLEDevice: unable to find characteristic: ${n}`)}addChromeService(e){let o=this[g]._services,n=e.uuid.toLowerCase();if(o[n]){console.warn(`BLEDevice: Service already added: ${n}`);return}o[n]=new ge(e),this.emit("service-added",o[n])}addChromeCharacteristic(e){let o=this[g]._characteristics,n=e.uuid.toLowerCase();if(o[n]){console.warn(`BLEDevice: Characteristic already added: ${n}`);return}let r=this[g]._services[e.service.uuid.toLowerCase()];console.assert(r),o[n]=new me({instanceId:e.instanceId,uuid:e.uuid,service:r,canRead:e.properties.includes("read"),canWrite:e.properties.includes("write"),canNotify:e.properties.includes("notify")}),this.emit("characteristic-added",o[n])}updateFromChromeDevice(e){let o=null,n=this[g];return Object.keys(e).forEach(r=>{if(r in n){let s=e[r];n[r]!==s&&(o=o||{},o[r]=s,n[r]=s,this.emit(`${r}-changed`,s))}}),o}};J.prototype._enable_dev_logging=function(){this.___dev_logging||(this.___dev_logging=!0,["address","name","connected","connecting","connectable","inquiryRssi"].forEach(e=>{this.on(`${e}-changed`,o=>{console.log(`++++ BLE Device: ${this.address}`),console.log(` * property changed: "${e}" = ${o}`)})}),this.on("characteristic-value-changed",({characteristic:e,value:o})=>{console.log(`++++ BLE Device: ${this.address}`),console.log(` * Characteristic Value Changed: ${e.uuid}`),console.log(" * value :"),console.dir(new Uint8Array(o))}),this.on("service-added",e=>{console.log(`++++ BLE Device: ${this.address}`),console.log(` * Service Added: ${e.uuid}`)}),this.on("characteristic-added",e=>{console.log(`++++ BLE Device: ${this.address}`),console.log(` * Characteristic Added: ${e.uuid}   service.uuid=${e.service.uuid}`)}))};var R=!1,He=(t,e)=>d.check(t,e);console.assert(chrome&&chrome.runtime);var Fe=!1;chrome.runtime.getPlatformInfo(t=>{Fe=["cros"].includes(t.os)});var Ee=(()=>{let t=null;function e(){return t&&t.powered&&t.available&&Fe}function o(r){let s=!1;t&&Object.keys(r).forEach(i=>{let l=t[i],a=r[i];l!==a&&(s=s||["powered","available"].includes(i),console.log(`Adapter State Updated: ${i} changed from ${l} to ${a}`))}),t=r}function n(){return t||{}}return{update:o,get:n,isAvailableAndReady:e}})();function ro(t){if(chrome.runtime.lastError)throw new d;Ee.update(t),R&&(console.log("Bluetooth: AdapterState changed"),console.dir(t))}function so(t){if(chrome.runtime.lastError)throw new d;u.add(new J(t)),R&&(console.log(`Bluetooth: Device Added: ${t.name}, address=${t.address}`),console.dir(t),console.dir(u.devices))}function io(t){if(chrome.runtime.lastError)throw new d;R&&(console.log("Bluetooth: Device Changed"),console.dir(t)),u.update(t)}function co(t){if(chrome.runtime.lastError)throw new d;u.remove(t),R&&(console.log("Bluetooth: Device Removed"),console.dir(t),console.dir(u.devices))}chrome.bluetooth&&(chrome.bluetooth.onAdapterStateChanged.addListener(ro),chrome.bluetooth.onDeviceAdded.addListener(so),chrome.bluetooth.onDeviceChanged.addListener(io),chrome.bluetooth.onDeviceRemoved.addListener(co),chrome.bluetooth.getAdapterState(t=>{if(chrome.runtime.lastError)throw new d;Ee.update(t),R&&(console.log("Bluetooth: Adapter State:"),console.dir(t))}),chrome.bluetooth.getDevices(t=>{if(chrome.runtime.lastError)throw new d;t.forEach(e=>u.add(new J(e))),R&&(console.log("Bluetooth: Devices"),console.dir(u.devices))}));function lo(){return chrome.bluetooth?new Promise((t,e)=>{R&&console.log("Bluetooth: Discovery Starting..."),chrome.bluetooth.startDiscovery(()=>{He(e,"bluetooth.startDiscovery")&&(R&&console.log("Bluetooth: Discovery Started"),t())})}):Promise.reject(new Error("Bluetooth API not available"))}function ao(){return chrome.bluetooth?new Promise((t,e)=>{R&&console.log("Bluetooth: Discovery Stopping..."),chrome.bluetooth.stopDiscovery(()=>{He(e,"bluetooth.stopDiscovery")&&(R&&console.log("Bluetooth: Discovery Stopped"),t())})}):Promise.reject(new Error("Bluetooth API not available"))}var O={adapterState:Ee,startDiscovery:lo,stopDiscovery:ao};var f=!1,uo=1,ho=2,fo=3,vo=4,go=5,po=6,mo=7,Eo=1,bo=2,wo=3,Co=4,be=5,Do=6,yo=7,Io=8,_o=9,So=10,ae=0,Ro=1,Lo=1,Ao=2,Bo=3,ko=4,Po=5,$o=6,Uo=7,We=8,Me=9,we=t=>{t=t.toLowerCase();let e=t.match(/^0000([0-9a-f]{4})\-0000\-1000\-8000\-00805f9b34fb$/i);return e&&(t=e[1]),t};function c(){this.fields=[]}c.s8=0;c.u8=1;c.s16=2;c.u16=3;c.s32=4;c.u32=5;c.STRING=6;c.BUFFER=7;var N={address:[Lo,c.STRING],name:[Ao,c.STRING],paired:[Bo,c.u8],connectable:[ko,c.u8],connecting:[Po,c.u8],connected:[$o,c.u8],inquiryRssi:[Uo,c.s8],service:[We,c.STRING],characteristic:[Me,c.STRING]},Ge=Object.keys(N);c.UTF8_ENCODER=new TextEncoder("utf-8");c.prototype.write=function(t,e){t===c.STRING&&(e=c.UTF8_ENCODER.encode(e)),this.fields.push([t,e])};c.prototype.calcByteLength=function(){let t=0;return this.fields.forEach(e=>{let[o,n]=e;switch(o){case c.s8:t+=1;break;case c.u8:t+=1;break;case c.s16:t+=2;break;case c.u16:t+=2;break;case c.s32:t+=4;break;case c.u32:t+=4;break;case c.STRING:t+=2,t+=n.length;break;case c.BUFFER:t+=4,t+=n.byteLength;break;default:console.error(`Invalid Packet datatype=${o}, with value=${n}`)}}),t};c.prototype.getBuffer=function(){let t=this.calcByteLength(),e=new ArrayBuffer(t),o=new DataView(e),n=0;return this.fields.forEach(r=>{let[s,i]=r;switch(s){case c.s8:o.setInt8(n,i),n+=1;break;case c.u8:o.setUint8(n,i),n+=1;break;case c.s16:o.setInt16(n,i),n+=2;break;case c.u16:o.setUint16(n,i),n+=2;break;case c.s32:o.setInt32(n,i),n+=4;break;case c.u32:o.setUint32(n,i),n+=4;break;case c.STRING:o.setUint16(n,i.length),n+=2;for(let l=0;l<i.length;++l)o.setUint8(n,i[l]),++n;break;case c.BUFFER:o.setUint32(n,i.byteLength),n+=4,new Uint8Array(e).set(new Uint8Array(i),n),n+=i.byteLength;break;default:console.error(`Invalid Packet datatype=${s}, with value=${i}`)}}),e};var de=Symbol("priv"),b=[];function ee(t){return{address:t.address,name:t.name,connectable:t.connectable,connecting:t.connecting,connected:t.connected,inquiryRssi:t.inquiryRssi}}u.on("device-discovered",t=>{f&&(console.log(`*** Bluetooth Device Discovered: id=${t.id} ${t.name}, addr=${t.address}`),console.dir(t)),t.on("service-added",e=>{f&&(console.log(`++++ BLE Device: ${t.address}`),console.log(` * Service Added: ${e.uuid}`)),b.forEach(o=>{o.send_deviceServiceDiscovered(t.id,e)})}),t.on("characteristic-added",e=>{f&&(console.log(`++++ BLE Device: ${t.address}`),console.log(` * Characteristic Added: ${e.uuid}   service.uuid=${e.service.uuid} [id=${e.id}]`)),b.forEach(o=>{o.send_deviceCharacteristicDiscovered(t.id,e)})}),t.on("characteristic-value-changed",({characteristic:e,value:o})=>{f&&(console.log(`++++ BLE Device: ${t.address}`),console.log(` * Characteristic Value Changed: ${e.uuid}   service.uuid=${e.service.uuid}`)),b.forEach(n=>{n.send_characteristicNotifyData(e.id,o)})}),b.forEach(e=>{e.send_deviceDiscovered(t.id,t.type,ee(t))})});u.on("device-updated",({device:t,props:e})=>{f&&(console.log(`*** Bluetooth Device Updated: id=${t.id} ${t.name}, addr=${t.address}`),console.dir(t),console.dir(e)),b.forEach(o=>{o.send_deviceUpdated(t.id,e)})});u.on("device-removed",t=>{f&&(console.log(`*** Bluetooth Device Removed: id=${t.id} ${t.name}, addr=${t.address}`),console.dir(t)),b.forEach(e=>{e.send_deviceRemoved(t.id)})});var je={setup(){return this[de]={adapterPoll:0},Promise.resolve()},ready(){let t=null,e=()=>{let o=O.adapterState.isAvailableAndReady();t!==o&&(this.send_adapterAvailableAndReady(o),t=o),this[de].adapterPoll=setTimeout(e,1e3)};e(),u.devices.forEach(o=>{f&&(console.log(`========== Sending Known Device: ${o.id}`),console.dir(ee(o)),console.dir(o)),this.send_deviceDiscovered(o.id,o.type,ee(o))}),b.push(this)},teardown(){b=b.filter(t=>this!==t),clearTimeout(this[de].adapterPoll),this[de].adapterPoll=0,console.debug("BLEClient: Tearing Down BLE Client"),console.debug("BLEClient: Stopping Discovery"),O.stopDiscovery(),console.debug("BLEClient: Disconnecting Connected Devices:"),u.devices.forEach(t=>{(t.connected||t.connecting)&&(console.debug(`BLEClient: Disconnecting Device:${t.name}`),D.disconnect(t).then(()=>{console.debug(`BLEClient: Disconnected. device=${t.name}`)}).catch(e=>{console.error(`BLEClient: disconnect error, device=${t.name}`),console.error(e)}))})},parsePacket(t){let e=null,o=t,n=o.getUint8();if(n===uo)e=()=>{let r=()=>{u.devices.forEach(s=>{f&&(console.log(`========== Sending Known Device: ${s.id}`),console.dir(ee(s)),console.dir(s)),this.send_deviceDiscovered(s.id,s.type,ee(s))})};f&&console.log("START_DISCOVERY: starting."),O.startDiscovery().then(()=>{this.send_startDiscoveryResult(!0),f&&console.log("START_DISCOVERY: ok"),r()}).catch(s=>{console.error(s),this.send_startDiscoveryResult(!1),r()})};else if(n===ho)e=()=>{f&&console.log("STOP_DISCOVERY: starting."),O.stopDiscovery().then(()=>{this.send_stopDiscoveryResult(!0),f&&console.log("STOP_DISCOVERY: ok")}).catch(r=>{console.error(r),this.send_stopDiscoveryResult(!1)})};else if(n===fo){let r=o.getUint32();e=()=>{let s=u.getById(r);f&&(console.log(`Bluetooth: CONNECT_DEVICE deviceId=${r}`),console.log("BLE-Device:"),console.dir(s)),s?D.connect(s).then(()=>{f&&console.log(`Bluetooth: Connected. deviceId=${r}`)}).catch(i=>{console.error(i)}):console.warn(`Bluetooth: unable to locate deviceId=${r}`)}}else if(n===vo){let r=o.getUint32();e=()=>{let s=u.getById(r);f&&console.log(`Bluetooth: DISCONNECT_DEVICE deviceId=${r}`),s?D.disconnect(s).then(()=>{f&&console.log(`Bluetooth: Disconnected. deviceId=${r}`)}).catch(i=>{console.warn(i)}):console.warn(`Bluetooth: unable to locate deviceId=${r}`)}}else if(n===go){let r=o.getUint32();e=()=>{let s=u.getCharacteristicById(r);f&&console.log(`Bluetooth: CHARACTERISTIC_READ charId=${r}`),s?D.readCharacteristicValue(s).then(i=>{f&&console.log(`Bluetooth: Characteristic charId=${r}, read`),b.forEach(l=>{l.send_characteristicReadResult(r,i)})}).catch(i=>{b.forEach(l=>{l.send_characteristicReadResult(r,null)}),console.error(i)}):console.warn(`Bluetooth: unable to locate charId=${r}`)}}else if(n===po){let r=o.getUint32(),s=o.getUint32(),i=o.getBuffer(s);e=()=>{let l=u.getCharacteristicById(r);f&&console.log(`Bluetooth: CHARACTERISTIC_WRITE charId=${r}, numBytes=${s}`),l?s===i.byteLength?D.writeCharacteristicValue(l,i).then(()=>{f&&console.log(`Bluetooth: Characteristic charId=${r}, written`),b.forEach(a=>{a.send_characteristicWriteResult(r,!0)})}).catch(a=>{b.forEach(m=>{m.send_characteristicWriteResult(r,!1)}),console.error(a)}):(console.error(`CHARACTERISTIC_WRITE: expected ${s} bytes, found ${i.byteLength} bytes`),b.forEach(a=>{a.send_characteristicWriteResult(r,!1)})):console.warn(`Bluetooth: unable to locate charId=${r}`)}}else if(n===mo){let r=o.getUint32(),s=o.getUint8()!==0;e=()=>{let i=u.getCharacteristicById(r);f&&console.log(`Bluetooth: CHARACTERISTIC_NOTIFY charId=${r} NOTIFY: ${s?"ENABLE":"DISABLE"}`),i?(s?D.startCharacteristicNotifications:D.stopCharacteristicNotifications)(i).then(()=>{f&&console.log(`Bluetooth: Characteristic charId=${r}, NOTIFY: ${s?"ENABLED":"DISABLED"}`),b.forEach(a=>{a.send_characteristicNotifyResult(r,!0)})}).catch(a=>{b.forEach(m=>{m.send_characteristicNotifyResult(r,!1)}),console.error(a)}):console.warn(`Bluetooth: unable to locate charId=${r}`)}}else console.warn(`UNKNOWN BLEClient Packet Type: ${n}`);return e},send_startDiscoveryResult(t){return this.sendByteArray([bo,t?1:0])},send_stopDiscoveryResult(t){return this.sendByteArray([wo,t?1:0])},send_adapterAvailableAndReady(t){return this.sendByteArray([Eo,Ro,t?1:0])},send_deviceDiscovered(t,e,o){let n=new c;return n.write(c.u8,Co),n.write(c.u32,t),n.write(c.STRING,e||""),Object.keys(o).filter(s=>Ge.includes(s)).forEach(s=>{let i=o[s];if(s in N){let l=N[s][0],a=N[s][1];n.write(c.u8,l),n.write(a,i)}}),n.write(c.u8,ae),this.sendPacket(n)},send_deviceServiceDiscovered(t,e){let o=new c;return o.write(c.u8,be),o.write(c.u32,t),o.write(c.u8,We),o.write(c.STRING,we(e.uuid)),o.write(c.u8,ae),this.sendPacket(o)},send_deviceCharacteristicDiscovered(t,e){let o=new c,n=we(e.uuid),r=we(e.service.uuid),s=`${e.id}:${n}:${r}:`;return s+=e.canRead?"read,":"",s+=e.canWrite?"write,":"",s+=e.canNotify?"notify,":"",o.write(c.u8,be),o.write(c.u32,t),o.write(c.u8,Me),o.write(c.STRING,s),o.write(c.u8,ae),this.sendPacket(o)},send_deviceUpdated(t,e){let o=new c;return o.write(c.u8,be),o.write(c.u32,t),Object.keys(e).filter(r=>Ge.includes(r)).forEach(r=>{let s=e[r];if(r in N){let i=N[r][0],l=N[r][1];o.write(c.u8,i),o.write(l,s)}}),o.write(c.u8,ae),this.sendPacket(o)},send_deviceRemoved(t){let e=new c;return e.write(c.u8,Do),e.write(c.u32,t),this.sendPacket(e)},send_characteristicReadResult(t,e){let o=new c;return o.write(c.u8,yo),o.write(c.u32,t),e?o.write(c.BUFFER,e):o.write(c.u32,0),this.sendPacket(o)},send_characteristicWriteResult(t,e){let o=new c;return o.write(c.u8,Io),o.write(c.u32,t),o.write(c.u8,e?1:0),this.sendPacket(o)},send_characteristicNotifyResult(t,e){let o=new c;return o.write(c.u8,_o),o.write(c.u32,t),o.write(c.u8,e?1:0),this.sendPacket(o)},send_characteristicNotifyData(t,e){let o=new c;return o.write(c.u8,So),o.write(c.u32,t),o.write(c.BUFFER,e),this.sendPacket(o)},send_unknownPacket(){return this.sendByteArray([255,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])}},Ye={setup(){return Promise.reject(new Error("BluetoothClient: setup not implemented"))},ready(){},teardown(){},parsePacket(){return null}};if(f){let t=function(e,o){Object.keys(o).forEach(n=>{let r=o[n];typeof r=="function"&&(o[n]=function(...s){return console.log(`Bluetooth-${e}: ${n}() called.`),r.call(this,...s)})})};t("Adapter",je),t("Client",Ye)}var Ce={AdapterClientMixin:je,BluetoothClientMixin:Ye};var $=!1,{tcpServer:te}=chrome.sockets,{tcp:M}=chrome.sockets,y={socketId:null,socketInfo:null,clients:{}},U=Symbol("priv"),De=class{constructor(){let e=new ArrayBuffer(0);this[U]={buffer:e,view:new DataView(e),baseOffset:0,offset:0}}get byteLength(){let e=this[U];return e.buffer.byteLength-e.baseOffset-e.offset}getBuffer(e){if(e>this.byteLength)throw new RangeError("Offset is outside the bounds of the DataView");let o=this[U],n=o.baseOffset+o.offset,r=o.buffer.slice(n,n+e);return o.offset+=e,r}log(){let e=this[U];console.log("STREAM_VIEW: byteLength: %d",this.byteLength),console.log("baseOffset: %d, offset: %d",e.baseOffset,e.offset);let o=e.baseOffset+e.offset;console.log(new Uint8Array(e.buffer.slice(o)))}reset(){let e=this[U];e.offset=0}consume(){let e=this[U];e.baseOffset+=e.offset,e.offset=0}addBuffer(e){e.buffer&&(e=e.buffer);let o=this[U],n=o.buffer.byteLength-o.baseOffset,r=new Uint8Array(n+e.byteLength);r.set(new Uint8Array(o.buffer.slice(o.baseOffset))),r.set(new Uint8Array(e),n),o.buffer=r.buffer,o.view=new DataView(o.buffer),o.baseOffset=0}};[["getInt8",1],["getUint8",1],["getInt16",2],["getUint16",2],["getInt32",4],["getUint32",4],["getFloat32",4],["getFloat64",8]].forEach(([t,e])=>{let o=DataView.prototype[t];De.prototype[t]=function(n){let r=this[U],{view:s}=r,i=r.baseOffset+r.offset,l=o.call(s,i,n);return r.offset+=e,l}});function I(t){this._send=t,this._onReceive=this._onReceiveHandshake,this.streamView=new De,this.closed=!1}I.prototype.send=function(t){let e;return this._send?(t.buffer&&(t=t.buffer),e=this._send(t)):e=Promise.reject(new Error("No Send Function Set")),e};I.prototype.sendHandshakeResult=function(t){$&&console.log(`Sending Handshake Result: ${t}`);let e=new Uint8Array([t]);return this.send(e.buffer)};I.prototype.onReceive=function(t){if(this._onReceive){this.streamView.addBuffer(t);try{for(;this.streamView.byteLength>0;)this._onReceive(this.streamView),this.streamView.consume()}catch(e){e instanceof RangeError?(console.debug("Packet not complete, waiting for more data to stream in"),this.streamView.reset()):console.error(e)}}else console.error("ClientConnection: no receive function set")};I.prototype.sendByteArray=function(t){return this.send(new Uint8Array(t))};I.prototype.sendPacket=function(t){return this.send(t.getBuffer())};I.prototype.setup=function(){return Promise.reject(new Error("Bluetooth: ClientConnect.setup needs to be overriden"))};I.prototype.ready=function(){};I.prototype.teardown=function(){};I.prototype.parsePacket=function(){return console.error("Bluetooth: ClientConnect.parsePacket needs to be overriden"),null};function To(t){let e=null,o=t;if(o.byteLength>=4){let n=[];n.push(o.getUint8()),n.push(o.getUint8()),n.push(o.getUint8());let r=o.getUint8();n[0]===118&&n[1]===115&&n[2]===116?e={clientType:r}:console.error("Device Client: Magic number didn't match")}else console.error("Device Client: Handshake packet is incorrect size");return e}var Oo=function(t){$&&(console.log("BTAdapter: data received"),console.dir(t));let e=this.parsePacket(t);e?e():console.warn("Unknown packet received")};I.prototype._onReceiveHandshake=function(t){$&&console.log(`Handshake: DATA_RECEIVED: ${t}`);let e=To(t);if(e){let o=!0;e.clientType===0?Object.assign(this,Ce.AdapterClientMixin):e.clientType===1?Object.assign(this,Ce.BluetoothClientMixin):o=!1,o?(this._onReceive=Oo,this.setup().then(()=>{this.sendHandshakeResult(0).then(n=>{console.log("Handshake Response: SENT"),console.dir(n),this.ready()},n=>console.error(n))},n=>{console.error(n),this.sendHandshakeResult(-1)})):console.error("Failed to create client")}else console.error("Failed to process handshake")};I.prototype.onReceiveError=function(t){console.error(`Device Client: onReceiveError, resultCode=${t}`)};I.prototype.onClose=function(){this.closed||(this.teardown(),this.closed=!0)};I.prototype.onError=function(t){console.error("Device Client: error"),console.error(t),this.onClose()};function G(t){let e=!0;return chrome.runtime.lastError&&(console.error(`Device Server: Error in ${t}`),console.error(chrome.runtime.lastError),e=!1),e}function No(t){return function(e){return new Promise((o,n)=>{M.send(t,e,r=>{G("tcp.send")?o(r):n(new Error("TCP Send Error"))})})}}function Vo(t){let e=null;$&&(console.log("Device Server: TCP Client Accepted:"),console.dir(t)),e=new I(No(t.clientSocketId)),y.clients[t.clientSocketId]=e,M.setPaused(t.clientSocketId,!1,()=>{G("tcp.setPaused(false)")&&$&&console.log("Device Server: Client Socket Ready.")})}function xo(t){G("tcpServer.onAcceptError")&&(console.error("Device Server: TCP Accept Error:"),console.error(t))}function Ho(t){let e;$&&(console.log(`Device Server: Client Received (${t.socketId})`),console.dir(t),console.log(new Uint8Array(t.data))),e=y.clients[t.socketId],e&&e.onReceive(t.data)}function Fo(t){let e=y.clients[t.socketId];e&&(console.error("Device Server: TCP Receive Error"),console.error(t),e.onReceiveError(t.resultCode),M.close(t.socketId,()=>{e&&e.onClose(),delete y.clients[t.socketId]}))}function Wo(){function t(o){return function(n){G("tcpServer")&&n.socketId===y.socketId&&o(n)}}function e(o){return function(n){G("tcp")&&o(n)}}te.onAccept.addListener(t(Vo)),te.onAcceptError.addListener(t(xo)),M.onReceive.addListener(e(Ho)),M.onReceiveError.addListener(e(Fo))}function Mo(){let t="127.0.0.1",e=0,o=4;return Wo(),new Promise((n,r)=>{te.create({name:"vst-bluetooth-device-server",persistent:!1},s=>{y.socketId=s.socketId,$&&(console.log("Device Server: Created..."),console.dir(s)),te.listen(y.socketId,t,e,o,i=>{i>=0?te.getInfo(y.socketId,l=>{y.socketInfo=l,$&&(console.log(`Device Server: Listening on port ${l.localPort}`),console.dir(l)),n(l)}):r(new Error(`Device Server: Failed to listen to socket: errcode=${i}`))})})})}function Go(){Object.keys(y.clients).forEach(t=>{y.clients[t].onClose(),M.close(t,()=>{G("tcp.close"),console.log(`Connection Closed: socketId=${t}`)})}),y.clients={}}var j={start:Mo,disconnectAll:Go,_server:y,getPort:()=>y.socketInfo?y.socketInfo.localPort:0};var Ke=10,jo=768,Yo=1220,Ko=512,ze=400;ce.start().then(t=>{console.log("USB Device Server Started"),console.dir(t)},t=>{console.error("USB Device Server:"),console.error(t)});var qe=chrome&&chrome.bluetooth&&chrome.bluetoothLowEnergy;qe&&j.start().then(t=>{console.log("Bluetooth Device Server Started"),console.dir(t)},t=>{console.error("Bluetooth Device Server:"),console.error(t)});window.btserver=j;window.btapi=O;window.ble=D;window.btdevices=u;window.btdev=()=>{let t=u.devices.map(e=>({id:e.id,name:e.name,connected:e.connected,connecting:e.connecting,connectable:e.connectable,address:e.address,chars:Object.keys(e.characteristics)}));console.dir(t)};function ye(t="ga",e){let o=screen.availWidth,n=screen.availHeight,r=Math.min(jo+Ke,n-Ke),s=Math.min(Yo,o),i="index.html",l="index";t==="firmware-updater"&&(s=Ko,i="fw-updater.html",l="firmware_updater");let a={frame:"none",id:l,outerBounds:{width:s,height:r,minWidth:ze,minHeight:ze,left:Math.round((o-s)/2),top:Math.round((n-r)/2)}};function m(p){p.contentWindow.launchData=e,p.contentWindow.addEventListener("load",()=>{let h={serviceType:"_vernier-data._tcp.local"};function V(Y){chrome.runtime.sendMessage({mdnsServices:Y})}function _(Y){Y.dsSourceDiscovery==="start"?chrome.mdns.onServiceList.addListener(V,h):Y["check-start-file"]?chrome.runtime.sendMessage({startupFile:e}):Y["check-url"]&&chrome.runtime.sendMessage({startupUrl:e})}chrome.runtime.onMessage.addListener(_),p.onClosed.addListener(()=>{chrome.mdns.onServiceList.removeListener(V,h),chrome.runtime.onMessage.removeListener(_),ce.disconnectAll(),j&&j.disconnectAll()})}),chrome.runtime.sendMessage({startupFile:e})}chrome.app.window.create(i,a,m)}chrome.runtime.onMessage.addListener((t,e,o)=>{if(t==="launch-firmware-updater"&&ye("firmware-updater"),t==="launch-ga"&&ye("ga"),t.type==="query-background-page-device-server-ports"){let n=20,r=()=>{let s=ce.getPort(),i=j.getPort();s===0||qe&&i===0?(n--,n>0?setTimeout(r,250):o({type:t.type,error:"Failed to get ports"})):o({type:t.type,ports:{usb:s,bluetooth:i}})};r()}});chrome.app.runtime.onLaunched.addListener(t=>{ye(null,t)});
