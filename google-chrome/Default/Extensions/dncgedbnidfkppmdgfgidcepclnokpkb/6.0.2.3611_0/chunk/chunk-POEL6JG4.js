var n={INFO:"/info",STATUS:"/status",COLUMNS:"/columns",START_COLLECTION:"/control/start",STOP_COLLECTION:"/control/stop"};function u(t){return t?t+n.INFO:n.INFO}function i(t){return t?t+n.STATUS:n.STATUS}function e(t){return`${n.COLUMNS}/${t}`}function T(t,o){return t?t+e(o):e(o)}function O(t){return t?t+n.START_COLLECTION:n.START_COLLECTION}function C(t){return t?t+n.STOP_COLLECTION:n.STOP_COLLECTION}function c(t){let o=null,r=t.match(/^\s*(\d+)\.(\d+)\.(\d+)\s*$/);if(r&&r.length===4)o={major:parseInt(r[1],10),minor:parseInt(r[2],10),micro:parseInt(r[3],10)};else throw new Error(`Failed to parse version string: ${t}`);return o}var S={path:n,getInfoURL:u,getStatusURL:i,getColumnURL:T,getStartCollectionURL:O,getStopCollectionURL:C,getColumnPath:e,parseVersion:c};export{S as a};
