import{g as b}from"./chunk-SSPC3AL5.js";var i=({store:o,key:t})=>{let e=t.split("."),s=o[e.shift()];return e.forEach(r=>{s=s[r]}),s},l=({property:o,store:t,key:e,component:s})=>{let r=i({store:t,key:e});return b(()=>i({store:t,key:e}),()=>{s.requestUpdate(o,r),r=i({store:t,key:e})})};function c({property:o,store:t,key:e,definedOn:s}){Object.defineProperty(s,o,{configurable:!0,get(){return i({store:t,key:e})},set(){console.error(`Unable to set %c${o}%c property directly in %c${this.localName}%c. Please use an appropriate action from %c${t.constructor.name}%c to update %c${e}%c.`,"color:white; -webkit-text-stroke: 1px teal;","color:lightred; -webkit-text-stroke:0;","color:white; -webkit-text-stroke: 1px teal;","color:lightred; -webkit-text-stroke:0;","color:white; -webkit-text-stroke: 1px teal;","color:lightred; -webkit-text-stroke:0;","color:white; -webkit-text-stroke: 1px teal;","color:lightred; -webkit-text-stroke:0;")}})}var p=o=>class extends o{static finalize(){return super.finalize(),this.observableProperties&&Object.entries(this.observableProperties).forEach(([t,e])=>{e.store||(e={store:e,key:t});let{store:s,key:r}=e;this.prototype.hasOwnProperty(t)||c({property:t,store:s,key:r,definedOn:this.prototype})}),!0}connectedCallback(...t){this.constructor.observableProperties&&(this._observablePropDisposers||(this._observablePropDisposers={}),Object.entries(this.constructor.observableProperties||{}).forEach(([e,s])=>{s.store||(s={store:s,key:e});let{store:r,key:a}=s,n=l({property:e,store:r,key:a,component:this});this._observablePropDisposers[e]=n})),super.connectedCallback(...t)}disconnectedCallback(...t){super.disconnectedCallback(...t),this.constructor.observableProperties&&(Object.values(this._observablePropDisposers).forEach(e=>e()),delete this._observablePropDisposers)}addObservableProperty({store:t,key:e,property:s}){if(!t)throw new Error("Must provide a MobX store when declaring an observable property.");s||(s=e),this.hasOwnProperty(s)&&delete this[s],c({property:s,store:t,key:e,definedOn:this}),this._observablePropDisposers||(this._observablePropDisposers={});let r=l({property:s,store:t,key:e,component:this});this._observablePropDisposers[s]=r}removeObservableProperty(t){delete this[t],this._observablePropDisposers[t]()}removeObservableProperties(t=[]){t.forEach(e=>this.removeObservableProperty(e))}};export{p as a};
