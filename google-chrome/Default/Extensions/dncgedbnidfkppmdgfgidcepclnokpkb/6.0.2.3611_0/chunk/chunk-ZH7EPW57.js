import{a as O,d as D}from"./chunk-4YBGNFWQ.js";import{a as _}from"./chunk-DQXOKHFD.js";import{a as ze}from"./chunk-YJ5KKARE.js";import{e as v,h as I,m as w,p as W}from"./chunk-IMQHRNK4.js";import{c as y}from"./chunk-LI3RKPGW.js";import{a as f,h as $e}from"./chunk-CM6X6NVN.js";var u=!1,E=!1,F=(e,t,i,o)=>{let n=i.getFirstSensor();n&&!n?.dataMode.toLowerCase().indexOf("spectrum")&&e.type==="event"&&o.spectrumMode!=="intensity"&&t.updateColumnGroup(e.id,{name:y("Concentration","sensormap","Spec base column name"),units:y("mol/L","sensormap","Spec Concentration base column name unit")})},p={"dw:data-set-added":function(e){u&&(console.log(`-- Data Set Added id=${e.id}--`),console.dir(e),console.log("--------------------")),e.hasOwnProperty("id")&&(typeof e.id!="string"&&(e.id=`${e.id}`),this.createInternalDataSet(e))},"dw:data-set-ready":function(e){if(u&&(console.log(`-- Data Set Ready id=${e.id}--`),console.dir(e),console.log("--------------------")),e.hasOwnProperty("id")){typeof e.id!="string"&&(e.id=`${e.id}`);let t=this.getAllDataSets().find(i=>i.id===e.id);this.emit("data-set-ready",t)}},"dw:data-set-removed":function(e){u&&(console.log(`-- Data Set Removed id=${e.id}--`),console.dir(e),console.log("--------------------")),e.hasOwnProperty("id")&&(typeof e.id!="string"&&(e.id=`${e.id}`),this.removeInternalDataSet(e.id))},"dw:data-column-added":function(e){if(u&&(console.log("-- Data Column Added id=%d, groupId=%d --",e.id,e.groupId),console.dir(e),console.log("--------------------")),e.hasOwnProperty("id")){typeof e.id!="string"&&(e.id=`${e.id}`);let t={};t.id=e.id,t.context=e.context,t.frozen=e.frozen,e.hasOwnProperty("type")&&e.hasOwnProperty("dataSetId")&&(t.setId=e.dataSetId,t.groupId=e.groupId,t.meterId=e.meterId,t.metered=e.metered,t.plotted=e.plotted,t.smaxy=e.SMAXY,t.editable=e.editable,t.prefersBase=e.base,t.precision=e.precision,t.dependentColumns=e.dependentColumns,t.replaceDependent=e.replaceDependent,t.getGroupFn=o=>this.getColumnGroupById(o.groupId),t.getDataSetFn=o=>this.dataSets.find(n=>n.id===o.setId),t.getSpecialFn=o=>{let n=this.getDataSetByID(o.setId);return n?n.type!=="regular":!1},t.foreignId=e.foreignId,t.foreignGroupId=e.foreignGroupId,t.formatStr=e.formatStr,t.units=e.units,t.struckRows=e.struckRows,t.siblingId=e.siblingId,t.beforeSibling=e.beforeSibling,t.direction=e.direction,t.objectId=e.objectId,t.objectId>0&&(t.type=e.type),this.importing&&(t.color=e.color,t.symbol=_(e.symbol)),e.scaleMode==="autoscale_from_zero"&&(t.autoscaleFromZero=!0),e.type==="sensor"?t.sensorId=e.sensorId:e.type==="time"&&this.timeUnits&&(t.units=this.timeUnits,t.formatStr=this._getTimeFormatStr(this.timeUnits,this.dataCollection)),t.dataType=e.dataType);let i=this.getDataSetByID(e.dataSetId);console.assert(i),this.createInternalColumnForDataSet(i,t)}},"dw:data-column-removed":function(e){if(u&&(console.log("-- Data Column Removed id=%d --",e.id),console.dir(e),console.log("--------------------")),e.hasOwnProperty("id")){let t=e.id;!this.removeInternalColumn(t)&&this.sessionType!=="DataShare"&&console.error(`Failed to remove column id= ${t}`)}},"dw:data-column-updated":function(e){u&&(console.log("-- DataColumn Updated --"),console.dir(e),console.log("--------------------"));let t=this.getColumnById(e.id);t?(t.range=e.range,e.color&&this.sessionType!=="DataShare"&&(t.color=e.color),e.dataType&&e.dataType!==t.dataType&&(t.dataType=e.dataType,this.emit("column-datatype-changed",t)),t.frozen=e.frozen??!1):console.error(`Failed to find column for columnId=${e.id}`)},"dw:data-set-updated":function(e){if(u&&(console.log("-- DataSet Updated --"),console.dir(e),console.log("--------------------")),!e.id)console.warn("Invalid params");else{let t=this.getDataSetByID(e.id);e.name&&e.name!==t.name&&(t.name=e.name,this.emit("dataset-name-changed",t,t.name))}},"dw:unit-change-finished":function(e){u&&(console.log("-- DataColumn Unit-Change Finished --"),console.dir(e),console.log("--------------------"));let t=this.getColumnById(e.columnId);t&&t.group?this.emit("column-group-unit-change-finished",t.group):console.error(`Failed to find column group for columnId ${e.columnId}`)},"dw:data-set-row-added":function(e){E&&(console.log("-- Data Set Row(s) Added --"),console.dir(e),console.log("--------------------")),e.forEach(t=>{let{dataSetId:i}=t,{rowIndex:o}=t,{count:n}=t,r=this.getDataSetByID(i);r?r.columnIds.forEach(c=>{let l=this.getColumnById(c),{values:a}=l;if(!this.importing&&(l.type==="manual"||l.type==="event"))return;let h;for(h=0;h<n;++h){let g=o+h;g===a.length?a[g]=NaN:a instanceof Float64Array?(a.copyWithin(g+1,g),a[g]=NaN):a.splice(g,0,NaN)}}):console.error(`Failed to find dataSet for dataSetId= ${i}`)})},"dw:data-column-values-updated":function(e){E&&(console.log("-- Data Column Values Updated --"),console.dir(e),console.log("--------------------")),e.forEach(t=>{let i=this.getColumnById(t.columnId);if(i){let{rows:o,values:n,wholeColumnFlag:r}=t,c=Math.min(o.length,n.length);if(console.assert(o.length===n.length),r&&(i.values=[],i.liveValue=null),i.setValuesByRow(o,n),c>0){let l=n[n.length-1];if(l==null||Number.isNaN(l)){for(let a=n.length-2;a>=0;--a)if(n[a]!=null&&!Number.isNaN(n[a])){l=n[a];break}}l!=null&&!Number.isNaN(l)&&(i.liveValue=l),i.emit("values-changed",i.values)}}else console.error(`Failed to find column for columnId=${t.columnId}`)})},"dw:data-column-live-readout-changed":function(e){E&&(console.log("-- Data Column Live Readout Changed --"),console.dir(e),console.log("--------------------"));let{columnId:t}=e,i=this.getColumnById(t);if(i){let o=this.sensorWorld,n=e.valid?e.value:null;if(i.liveValue=n,i.type==="sensor"){let r=o.getSensorById(i.sensorId);r?(r.liveValue=i.liveValue,r.dataMode.toLowerCase().includes("spectrum")&&(this.keepAwakeTimeout?clearTimeout(this.keepAwakeTimeout):this.power.requestWakeLock("system"),this.keepAwakeTimeout=setTimeout(()=>{this.power.releaseWakeLock()},1e4))):console.warn(`Failed to find sensor for sensorId=${i.sensorId}`)}}else console.error(`Failed to find column for columnId=${t}`)},"dw:data-graph-updated":function(e){u&&(console.log("-- Graph Updated --"),console.dir(e),console.log("--------------------"));let t=e.type==="bar-chart";t&&(e.type="normal"),e.bars=t,this._graphInfos[e.graphId]=e,this.emit("imported-graph-state-ready",e)},"dw:data-annotation-updated":function(e){u&&(console.log("-- Annotation Updated --"),console.dir(e),console.log("--------------------")),this.emit("annotation-updated",e)},"dw:data-video-updated":function(e){u&&(console.log("-- Video Updated --"),console.dir(e),console.log("--------------------")),this.emit("imported-video-state-ready",e)},"dw:data-group-added":function(e){u&&(console.log("-- Data Group Added name=%s, id=%d --",e.name,e.id),console.dir(e),console.log(`precision: ${e.precision.precision}`),console.log("--------------------"));let t=e.name==="Time"?"general":"sensormap",i=y(e.name,t);if(i!==e.name){let n={experimentId:this.experimentId,groupId:e.id,properties:{name:i}};this.api.updateColumnGroup(n)}let o={};o.id=e.id,o.name=e.name,o.units=e.units,o.color=e.color!=="auto"?e.color:"",o.direction=e.direction,o.precision=e.precision,o.automaticPrecision=e.automaticPrecision,o.calcEquation=e.calcEquation,o.customEq=e.calcEquationStr,o.calcDependentGroups=e.calcDependentGroups.map(n=>`${n}`),o.calcCoefficients=e.calcCoefficients,o.calcUserEditable=e.calcUserEditable,o.calcCustomEqNeedsParsing=e.calcCustomEqNeedsParsing,o.errorBarColumnId=e.errorBarColumnId,o.errorBarType=e.errorBarType,o.errorBarValue=e.errorBarValue,o.type=e.type,o.range=e.range,o.replaceDependent=e.replaceDependent,o.editable=e.editable,o.deletable=e.deletable,o.sensorId=e.sensorId,o.sensorMapId=e.sensorMapId,o.wavelength=e.wavelength,o.meterId=e.meterId,o.metered=e.metered,o.smaxy=e.SMAXY,o.plotted=e.plotted,o.prefersBase=e.base,o.getAllColumnsFn=n=>this.getAllColumns().filter(r=>r.groupId===n.id),o.siblingId=e.siblingId,o.beforeSibling=e.beforeSibling,e.scaleMode==="autoscale_from_zero"&&(o.autoscaleFromZero=!0),this.createInternalGroup(o),this.session?F(e,this,this.sensorWorld,this.dataCollection):this.once("session-started",()=>F(e,this,this.sensorWorld,this.dataCollection),this)},"dw:data-group-removed":function(e){u&&(console.log("-- Data Group Removed id=%d --",e.id),console.dir(e),console.log("--------------------")),this.removeInternalGroup(e.id)},"dw:data-group-properties-changed":function(e){u&&(console.log("-- Data Group Properties Changed id=%d --",e.id),console.dir(e),console.log("--------------------"));let t=e.name==="Time"?"general":"sensormap",i=y(e.name,t);if(i!==e.name){let r={experimentId:this.experimentId,groupId:e.id,properties:{name:i}};this.api.updateColumnGroup(r)}e.type==="time"&&(e.units=this.timeUnits);let{id:o}=e,n={};n.name=e.name,n.units=e.units,n.color=e.color!=="auto"?e.color:"",n.precision=e.precision,n.automaticPrecision=e.automaticPrecision,n.calcEquation=e.calcEquation,n.customEq=e.calcEquationStr,n.calcDependentGroups=e.calcDependentGroups,n.calcCoefficients=e.calcCoefficients,n.calcUserEditable=e.calcUserEditable,n.calcCustomEqNeedsParsing=e.calcCustomEqNeedsParsing,n.errorBarColumnId=e.errorBarColumnId,n.errorBarType=e.errorBarType,n.errorBarValue=e.errorBarValue,n.type=e.type,n.range=e.range,n.replaceDependent=e.replaceDependent,n.editable=e.editable,n.deletable=e.deletable,n.sensorId=e.sensorId,n.sensorMapId=e.sensorMapId,n.wavelength=e.wavelength,n.metered=e.metered,n.plotted=e.plotted,n.prefersBase=e.base,n.direction=e.direction,n.smaxy=e.SMAXY,e.scaleMode==="autoscale_from_zero"&&(n.autoscaleFromZero=!0),u&&(console.log(`Name: ${e.name}`),console.log(`SMAXY: ${e.SMAXY}`)),this.updateInternalGroup(o,n)},"dw:session-started":function(e){u&&(console.log("-- Session Started --"),console.dir(e),console.log("--------------------")),this.sessionStarted(e)},"dw:document-age-updated":function(e){this.emit("dw:document-age-updated",e)},"gc-collection-started":function(){this.isCollecting=!0,this.emit("gc-collection-started")},"collection-started":function(){this._notifyCollectionStarted()},"collection-ended":function(){this.isCollecting&&this._notifyCollectionStopped()},"complete-collection":function(){this.isCollecting&&this.stopCollection()},"trigger-reached":function(){this.emit("collection-threshold-reached")},"prestore-reached":function(){this.emit("collection-prestore-reached")},"replay-engine-update":function(e){this.emit("replay-engine-update",e)},"dw:strikethrough-changed":function(e){let{experimentId:t,dataSetId:i,columnId:o,struckRows:n}=e;u&&(console.log(`-- Strikethrough Rows Changed: experimentId=${t}, dataSetId=${i} columnId=${o}`),console.dir(n));let r=this.getColumnById(o);r&&(r.struckRows=n)},"rpc-time-warning":function(e){this.emit("rpc-time-warning",e)}};var d=(e=0)=>new Promise(t=>setTimeout(t,e));var R=e=>{let t={};return t.dataSets=e.dataSets.map(i=>({id:i.id,type:i.type,name:i.name,position:i.position,columnIds:i.columnIds})),t.columns=e.columns.map(i=>({id:i.id,color:i.color,liveValue:i.liveValue,groupId:i.groupId,objectId:i.objectId,dataSetId:i.setId,symbol:i.symbol,values:i.values,updatedRows:i.updatedRows,context:i.context,dataType:i.dataType,allowAutomaticPrecision:i.allowAutomaticPrecision,automaticPrecision:i.automaticPrecision,scaleMode:i.autoscaleFromZero?"autoscale_from_zero":"",deletable:i.deletable,direction:i.direction,editable:i.editable,name:i.name,metered:i.metered,meterId:i.meterId,plotted:i.plotted,precision:{automatic:i.precision.automatic,precision:i.precision.precision,useSciNotation:i.precision.useSciNotation,useSigFigs:i.precision.useSigFigs},base:i.prefersBase,range:i.range,replaceDependent:i.replaceDependent,sensorId:i.sensorId,sensorMapId:i.sensorMapId,SMAXY:i.smaxy,struckRows:i.struckRows,type:i.type,units:i.units,wavelength:i.wavelength})),t.columnGroups=e.columnGroups.map(i=>({id:i.id,automaticPrecision:i.automaticPrecision,scaleMode:i.autoscaleFromZero?"autoscale_from_zero":"",calcCoefficients:i.calcCoefficients,calcDependentGroups:i.calcDependentGroups,calcEquation:i.calcEquation,customEq:i.customEq,calcUserEditable:i.calcUserEditable,color:i.color,deletable:i.deletable,editable:i.editable,metered:i.metered,meterId:i.meterId,name:i.name,plotted:i.plotted,precision:{automatic:i.precision.automatic,precision:i.precision.precision,useSciNotation:i.precision.useSciNotation,useSigFigs:i.precision.useSigFigs},base:i.prefersBase,range:i.range,replaceDependent:i.replaceDependent,SMAXY:i.smaxy,sensorId:i.sensorId,sensorMapId:i.sensorMapId,type:i.type,units:i.units,wavelength:i.wavelength,direction:i.direction})),t._graphInfos=e._graphInfos,t.sessionConfig=e.sessionConfig,t.experimentId=e.experimentId,t.isTriggeringEnabled=e.isTriggeringEnabled,t.meters=e.meters.map(i=>i.udmExport()),t},N=async(e,t)=>{e.blockInfoSyncing=!0,t.dataSets.forEach(async i=>{p["dw:data-set-added"].call(e,i),await d(1),p["dw:data-set-ready"].call(e,i),await d(1)}),t.columnGroups.forEach(async i=>{p["dw:data-group-added"].call(e,i),await d(1),p["dw:data-group-properties-changed"].call(e,i),await d(1)}),t.columns.forEach(async i=>{p["dw:data-column-added"].call(e,i);let o=e.getColumnById(i.id);console.assert(o),o.values=i.values,i.color&&(o.color=i.color)}),e._graphInfos=t._graphInfos,e.sessionConfig=t.sessionConfig,e.isTriggeringEnabled=t.isTriggeringEnabled,await Promise.all(t.meters.map(i=>{i.experimentId||(i.experimentId=t.sessionConfig.experimentId);let o=e.createMeter(i);return e.addMeter(o,!0)})),await d(10),e._blockSynced=!0,delete e.blockInfoSyncing};var B=(e,t,i)=>{Object.keys(e).forEach(o=>{let n=t[o],r=e[o];r!==n&&(t[o]=r)}),e.units&&i.emit("sensor-units-changed",t),e.dataMode&&i.emit("data-mode-changed",t)},x={"device-connection-changed":function(t){this.deviceConnectionChange(t)},"sensor-added":function(t){if(t.hasOwnProperty("uniqueId")&&t.hasOwnProperty("key")&&t.hasOwnProperty("autoId")&&t.hasOwnProperty("name")&&t.hasOwnProperty("units")&&t.hasOwnProperty("calibration")&&t.hasOwnProperty("sensorInfo")&&t.hasOwnProperty("zeroOnCollect")&&t.hasOwnProperty("canZeroOnCollect")&&t.hasOwnProperty("hasX4Mode")&&t.hasOwnProperty("x4Mode")&&t.hasOwnProperty("experimentId")&&t.hasOwnProperty("reversed")){let{uniqueId:i}=t,{autoId:o}=t,n=t.key,{units:r}=t,{name:c}=t,{sensorInfo:l}=t,{zeroOnCollect:a}=t,{canZeroOnCollect:h}=t,{hasX4Mode:g}=t,{x4Mode:P}=t,{experimentId:M}=t,{reversed:T}=t;this.createInternalSensor({id:i,sensorId:n,name:c,units:r,autoId:o,unitInfo:l.units,dataMode:t.dataMode||null,sensorInfo:l,zeroOnCollect:a,canZeroOnCollect:h,hasX4Mode:g,x4Mode:P,experimentId:M,reversed:T}).updateInternalCalibrationCoeffs(t.calibration.coeffs),this.emit("have-sensors",!0)}else console.error("sensor-added: missing parameters");if(t.name==="SpectroVis"){let i=this.getSensorById(t.uniqueId);i._name=""}},"sensor-ready":function(t){t.hasOwnProperty("uniqueId")&&t.hasOwnProperty("name")&&this.emit("sensor-ready",{sensorId:t.uniqueId,name:t.name})},"sensor-id-changed":function(t){if(t.hasOwnProperty("uniqueId")&&t.hasOwnProperty("oldId")){let{uniqueId:i}=t,{oldId:o}=t,n=this.getSensorById(o);if(n){let r=f({},t);delete r.uniqueId,delete r.oldId,delete r.key;let c=v(n);c.id=i,this.removeInternalSensor(t.oldId,!0),this.createInternalSensor(c,!0),B(r,c,this)}else console.warn(`No sensor with id ${o} in collection`)}},"sensor-removed":function(t){if(t.hasOwnProperty("uniqueId")){this.removeInternalSensor(t.uniqueId);let{haveSensors:i}=t;i||this.emit("have-sensors",!1)}},"sensor-online":function(t){if(t.hasOwnProperty("uniqueId")){let{uniqueId:i}=t,o=this.getSensorById(i);o&&(t.hasOwnProperty("deviceId")&&(o.deviceId=t.deviceId),t.hasOwnProperty("calibrationProcesses")&&o.updateCalibrationProcesses(t.calibrationProcesses))}},"sensor-offline":function(t){t.hasOwnProperty("uniqueId")&&this._setSensorOffline(t.uniqueId)},"sensor-live-voltage":function(t){if(t.hasOwnProperty("uniqueId")){let{uniqueId:i}=t,{value:o}=t,n=this.getSensorById(i);n&&(n.liveVoltage=o)}},"sensor-live-spectrum":function(t){if(t.hasOwnProperty("uniqueId")){let{uniqueId:i}=t,{spectrum:o}=t,n=this.getSensorById(i);n&&(n.liveSpectrum=o)}},"sensor-data":function(t){if(t.hasOwnProperty("uniqueId")&&t.hasOwnProperty("measurements")&&t.hasOwnProperty("timestamps")&&t.hasOwnProperty("count")){let{count:i,uniqueId:o}=t,n=new Float64Array(t.measurements,0,i),r=new Float64Array(t.timestamps,0,i),c=this.getSensorById(o);c&&this.dataCollection.updateSensorData(c,n,r)}},"sensor-property-change":function(t){if(t.hasOwnProperty("uniqueId")&&t.hasOwnProperty("key")&&t.hasOwnProperty("name")&&t.hasOwnProperty("units")&&t.hasOwnProperty("autoId")&&t.hasOwnProperty("zeroOnCollect")&&t.hasOwnProperty("canZeroOnCollect")&&t.hasOwnProperty("hasX4Mode")&&t.hasOwnProperty("x4Mode")){let i=this.getSensorById(t.uniqueId);if(i){let o=f({},t);o.sensorId=o.key,delete o.key,B(o,i,this)}else console.warn(`Unable to get sensor for id= ${t.uniqueId}`)}},"sensor-calibration-changed":function(t){if(t.hasOwnProperty("uniqueId")&&t.hasOwnProperty("calibration")){let i=this.getSensorById(t.uniqueId);i?i.updateInternalCalibrationCoeffs(t.calibration.coeffs):console.warn(`Unable to get sensor for id= ${t.uniqueId}`)}}};var U=e=>{let t={};return t.sensors=e.sensors.map(i=>({uniqueId:i.id,autoId:i.autoId,key:i.sensorId,units:i.units,name:i.name,sensorInfo:i.sensorInfo,zeroOnCollect:i.zeroOnCollect,canZeroOnCollect:i.canZeroOnCollect,hasX4Mode:i.hasX4Mode,x4Mode:i.x4Mode,calibration:i.calibration,dataMode:i.dataMode})),t.interfaces=e.interfaces,t.ignoreSensors=e.ignoreSensors,t.softSensorIds=e.syncableSoftSensorIds,t},j=async(e,t)=>{t.sensors.forEach(async i=>{x["sensor-added"].call(e,i),await d(1),x["sensor-ready"].call(e,i),await d(1)}),e.interfaces=t.interfaces,e.syncableSoftSensorIds=t.softSensorIds,e.ignoreSensors=t.ignoreSensors,await d(10)};var q=e=>{let t={};return t.timeUnits=e.timeUnits,t.mode=e.mode,t.isTimeBased=e.isTimeBased,t.spectrumMode=e.spectrumMode,t.timeBasedParams=e.timeBasedParams,t.defaultTimeParams=e.defaultTimeParams,t.defaultEventParams=e.defaultEventParams,t.defaultDropCountingParams=e.defaultDropCountingParams,t.defaultFullSpectrumParams=e.defaultFullSpectrumParams,t.defaultPhotogateTimingParams=e.defaultPhotogateTimingParams,t.eventBasedParams=e.eventBasedParams,t},V=async(e,t)=>{e.appInitialized=new Promise(i=>{e.on("app-initialized",i)}),e.mode=t.mode,e.isTimeBased=t.isTimeBased,e.spectrumMode=t.spectrumMode,Object.assign(e.timeBasedParams,t.timeBasedParams),Object.assign(e.defaultTimeParams,t.defaultTimeParams),Object.assign(e.defaultEventParams,t.defaultEventParams),Object.assign(e.defaultDropCountingParams,t.defaultDropCountingParams),Object.assign(e.defaultFullSpectrumParams,t.defaultFullSpectrumParams),Object.assign(e.defaultPhotogateTimingParams,t.defaultPhotogateTimingParams),Object.assign(e.eventBasedParams,t.eventBasedParams),e.timeUnits=t.timeUnits,e.setDefaultParams(!0),e.appInitialized.then(()=>{e._setCollectionParams({mode:e.mode,importing:!0,params:e.paramsLookup[e.mode]}),e.collectionModeChanged(e.mode,!0)}),await d(10)};var $=$e(ze());var He=(...e)=>e.reduce((t,i)=>(t[i]=i,t),{}),G=He("disconnected","connecting","connected","error");var s=Symbol("priv"),S=class extends $.default{constructor(t="",{id:i=-1,name:o="",displayName:n="",serialNumber:r="",address:c="",orderCode:l="",firmware:a={},gdxMapVersion:h=0,channels:g=[],state:P="",battery:M={},canIdentify:T=!1,errorMessage:A=null,calibrationProcesses:ee=null,manufactureDate:te="",userCalibrationDate:ie="",factoryCalibrationDate:oe="",hasUserCalibration:ne=!1,usingUserCalibration:se=!1,hasFactoryCalibration:re=!1,usingFactoryCalibration:ce=!1,hasDeviceAttributes:le=!1,deviceAttributes:ae=null,spectraTransportTime:de=0,spectraTimeScale:ue=0,minCollectionDelta:he=0,maxCollectionDelta:ge=0,minWavelength:fe=0,maxWavelength:ve=0,minWavelengthSmoothing:me=0,maxWavelengthSmoothing:pe=0,wavelengthSmoothing:be=0,minTemporalAveraging:ye=0,maxTemporalAveraging:Se=0,temporalAveraging:Ie=0,initialWarmupTime:we=0,recalibrationTime:De=0,noSkipTime:Ce=0,calibrated:Pe=!1,integrationTime:Me=0,spectrumMode:Te="absorbance",supportedSpectrumModes:Ee=[],supportedLedWavelengths:xe=[],ledWavelength:Le=0,ledIntensity:ke=0,ledCustomWavelengthSupport:Ae=!1,supportsFiniteCollections:Oe=!1,numberOfLoggedRuns:_e=0,offlineLoggingStatus:We={},gdxCartFanThrustVal:Fe=0,isGdxCartFanAlwaysEnabled:Re=!1,gcProfileRanges:Ne=null,gcDefaultProfile:Be=null,cvDefaultProfile:Ue=null,beDefaultProfile:je=null,ocpDefaultProfile:qe=null,cvsProfileRanges:Ve=null,cvsElectrodeType:Ge=null}={}){super();this[s]={type:t,id:i,name:o,displayName:n,serialNumber:r,address:c,orderCode:l,firmware:a,channels:g,gdxMapVersion:h,state:P,battery:M,canIdentify:T,errorMessage:A,calibrationProcesses:ee,manufactureDate:te,userCalibrationDate:ie,factoryCalibrationDate:oe,hasUserCalibration:ne,usingUserCalibration:se,hasFactoryCalibration:re,usingFactoryCalibration:ce,hasDeviceAttributes:le,deviceAttributes:ae,minCollectionDelta:he,maxCollectionDelta:ge,spectraTransportTime:de,spectraTimeScale:ue,minWavelength:fe,maxWavelength:ve,minWavelengthSmoothing:me,maxWavelengthSmoothing:pe,wavelengthSmoothing:be,minTemporalAveraging:ye,maxTemporalAveraging:Se,temporalAveraging:Ie,initialWarmupTime:we,recalibrationTime:De,noSkipTime:Ce,calibrated:Pe,integrationTime:Me,spectrumMode:Te,supportedSpectrumModes:Ee,supportedLedWavelengths:xe,ledWavelength:Le,ledIntensity:ke,ledCustomWavelengthSupport:Ae,supportsFiniteCollections:Oe,numberOfLoggedRuns:_e,offlineLoggingStatus:We,gdxCartFanThrustVal:Fe,isGdxCartFanAlwaysEnabled:Re,gcProfileRanges:Ne,gcDefaultProfile:Be,cvDefaultProfile:Ue,beDefaultProfile:je,ocpDefaultProfile:qe,cvsProfileRanges:Ve,cvsElectrodeType:Ge}}get enabledChannels(){return this[s].channels.filter(t=>t.enabled)}get type(){return this[s].type}get id(){return this[s].id}get deviceName(){return this[s].name}get name(){return this[s].name}get productName(){return this[s].displayName}get displayName(){return this[s].displayName}get serialNumber(){return this[s].serialNumber}get address(){return this[s].address}get orderCode(){return this[s].orderCode}get firmware(){return this[s].firmware}get gdxMapVersion(){return this[s].gdxMapVersion}get channels(){return this[s].channels}get connected(){return this[s].state==="connected"}get state(){return this[s].state}get battery(){return this[s].battery.percent=this[s].battery.percent>=0?this[s].battery.percent:void 0,this[s].battery}get canIdentify(){return this[s].canIdentify}get errorMessage(){return this[s].errorMessage}get calibrationProcesses(){return this[s].calibrationProcesses}get manufactureDate(){return this[s].manufactureDate}get userCalibrationDate(){return this[s].userCalibrationDate}get factoryCalibrationDate(){return this[s].factoryCalibrationDate}get hasUserCalibration(){return this[s].hasUserCalibration}get usingUserCalibration(){return this[s].usingUserCalibration}get hasFactoryCalibration(){return this[s].hasFactoryCalibration}get usingFactoryCalibration(){return this[s].usingFactoryCalibration}get calibrated(){return this[s].calibrated}get hasDeviceAttributes(){return this[s].hasDeviceAttributes}get deviceAttributes(){return this[s].deviceAttributes}get spectrumMode(){return this[s].spectrumMode}get supportedSpectrumModes(){return this[s].supportedSpectrumModes}get supportedLedWavelengths(){return this[s].supportedLedWavelengths}get ledWavelength(){return this[s].ledWavelength}get ledIntensity(){return this[s].ledIntensity}get ledCustomWavelengthSupport(){return this[s].ledCustomWavelengthSupport}get integrationTime(){return this[s].integrationTime}get spectraTimeScale(){return this[s].spectraTimeScale}get spectraTransportTime(){return this[s].spectraTransportTime}get minCollectionDelta(){return this[s].minCollectionDelta}get maxCollectionDelta(){return this[s].maxCollectionDelta}get minWavelength(){return this[s].minWavelength}get maxWavelength(){return this[s].maxWavelength}get minWavelengthSmoothing(){return this[s].minWavelengthSmoothing}get maxWavelengthSmoothing(){return this[s].maxWavelengthSmoothing}get wavelengthSmoothing(){return this[s].wavelengthSmoothing}get minTemporalAveraging(){return this[s].minTemporalAveraging}get maxTemporalAveraging(){return this[s].maxTemporalAveraging}get temporalAveraging(){return this[s].temporalAveraging}get initialWarmupTime(){return this[s].initialWarmupTime}get recalibrationTime(){return this[s].recalibrationTime}get noSkipTime(){return this[s].noSkipTime}get offlineLoggingStatus(){return this[s].offlineLoggingStatus}get supportsOfflineCollection(){return Boolean(this[s].offlineLoggingStatus)}get supportsFiniteCollections(){return this[s].supportsFiniteCollections}get numberOfLoggedRuns(){return this[s].numberOfLoggedRuns}get gdxCartFanThrustVal(){return this[s].gdxCartFanThrustVal}get isGdxCartFanAlwaysEnabled(){return this[s].isGdxCartFanAlwaysEnabled}get isGdxDevice(){return this[s].name.startsWith("GDX-")}get isGcDevice(){let{name:t}=this[s];return t.startsWith("Mini GC")||t.startsWith("GDX-GC")||t.startsWith("GC_")}get isGdxCvs(){return this[s].name.startsWith("GDX-CVS")}get isGdxPol(){return this[s].name.startsWith("GDX-POL")}get gcProfileRanges(){return f({},this[s].gcProfileRanges)}get gcDefaultProfile(){return f({},this[s].gcDefaultProfile)}get cvsProfileRanges(){return f({},this[s].cvsProfileRanges)}get cvDefaultProfile(){return f({},this[s].cvDefaultProfile)}get beDefaultProfile(){return f({},this[s].beDefaultProfile)}get ocpDefaultProfile(){return f({},this[s].ocpDefaultProfile)}get cvsElectrodeType(){return this[s].cvsElectrodeType}_update(t={}){let i={};Object.keys(this[s]).forEach(o=>{i[o]=`${W(o)}-changed`}),I(i).forEach(([o,n])=>{let r=t[o],c=this[s][o];o in t&&!w(r,c)&&(this[s][o]=r,this.emit(n,r))}),this[s].state!==G.error&&(this[s].errorMessage=null)}updateCalibrationStep(t={}){this.emit("calibration-step-result-changed",t)}};var b=Symbol("priv"),z=-1,H=-127,L=class extends S{constructor(t){super("bluetooth",t);this[b]={rssi:t.rssi,connectable:t.connectable},this.lastValidRssi=H}get rssi(){return this[b].rssi}get connectable(){return this[b].connectable}get isRssiValid(){return this[b].rssi<=z}_updateLastValidRssi(){this.rssi<=z?this.lastValidRssi=this.rssi:this.lastValidRssi=H}_update(t={}){super._update(t),I({rssi:"rssi-changed",connectable:"connectable-changed"}).forEach(([o,n])=>{let r=t[o],c=this[b][o];o in t&&!w(r,c)&&(this[b][o]=r,this.emit(n,r))}),this._updateLastValidRssi()}};var k=class extends S{constructor(t){super("usb",t)}};var m=Symbol("priv"),C=e=>({id:e.id,name:e.deviceName,connectable:e.connectable,rssi:e.rssi,state:e.state,deviceType:e.type,channels:e.channels,displayName:e.productName,firmware:e.firmware,gdxMapVersion:e.gdxMapVersion,offlineLoggingStatus:e.offlineLoggingStatus,orderCode:e.orderCode,serialNumber:e.serialNumber,address:e.address,canIdentify:e.canIdentify,battery:e.battery,spectraTimeScale:e.spectraTimeScale,spectraTransportTime:e.spectraTransportTime,minCollectionDelta:e.minCollectionDelta,maxCollectionDelta:e.maxCollectionDelta,minWavelength:e.minWavelength,maxWavelength:e.maxWavelength,minWavelengthSmoothing:e.minWavelengthSmoothing,maxWavelengthSmoothing:e.maxWavelengthSmoothing,wavelengthSmoothing:e.wavelengthSmoothing,minTemporalAveraging:e.minTemporalAveraging,maxTemporalAveraging:e.maxTemporalAveraging,temporalAveraging:e.temporalAveraging,initialWarmupTime:e.initialWarmupTime,recalibrationTime:e.recalibrationTime,noSkipTime:e.noSkipTime,calibrated:e.calibrated,integrationTime:e.integrationTime,spectrumMode:e.spectrumMode,supportedSpectrumModes:e.supportedSpectrumModes,supportedLedWavelengths:e.supportedLEDWavelengths,ledWavelength:e.LEDWavelength,ledIntensity:e.LEDIntensity,ledCustomWavelengthSupport:e.LEDCustomWavelengthSupport,calibrationProcesses:e.calibrationProcesses,manufactureDate:D(e.manufactureDate),userCalibrationDate:D(e.userCalibrationDate),factoryCalibrationDate:D(e.factoryCalibrationDate),hasUserCalibration:e.hasUserCalibration,usingUserCalibration:e.usingUserCalibration,hasFactoryCalibration:e.hasFactoryCalibration,usingFactoryCalibration:e.usingFactoryCalibration,hasDeviceAttributes:e.hasDeviceAttributes,deviceAttributes:e.deviceAttributes,supportsFiniteCollections:e.supportsFiniteCollections,numberOfLoggedRuns:e.numberOfLoggedRuns,gcProfileRanges:e.gcProfileRanges,gcDefaultProfile:e.gcDefaultProfile,cvDefaultProfile:e.cvDefaultProfile,beDefaultProfile:e.beDefaultProfile,ocpDefaultProfile:e.ocpDefaultProfile,cvsProfileRanges:e.cvsProfileRanges,cvsElectrodeType:e.cvsElectrodeType});function X(e,t){let{offlineLoggingStatus:i}=e,{offlineLoggingStatus:o}=t;return o&&i&&o.offlineStatus!==i.offlineStatus}var Xe={"devmgr:bluetooth-available":function(t){let{available:i}=t;this[m].bluetoothAvailable=i,i?this.emit("bluetooth-available"):this.emit("bluetooth-unavailable")},"devmgr:bluetooth-device-discovered":function(t){let i=v(this.combinedDeviceList),o=new L(C(t));this[m].bluetoothDeviceList.push(o);let n={to:this.combinedDeviceList,from:i};this._notifyDeviceListChanged(n,(...r)=>this.emit(...r)),this.emit("bluetooth-device-list-changed",this.bluetoothDeviceList)},"devmgr:bluetooth-device-removed":function(t){let i=v(this.combinedDeviceList),{bluetoothDeviceList:o}=this[m],n=o.findIndex(r=>r.id===t.id);if(n!==-1){let r=o[n];o.splice(n,1),r.off();let c={to:this.combinedDeviceList,from:i};this._notifyDeviceListChanged(c,(...l)=>this.emit(...l)),this.emit("bluetooth-device-list-changed",this.bluetoothDeviceList)}else console.warn(`No bluetooth device found with id ${t.id}`)},"devmgr:bluetooth-device-updated":function(t){let i=v(this.combinedDeviceList),{bluetoothDeviceList:o}=this[m],n=o.findIndex(r=>r.id===t.id);if(n!==-1){let r=o[n],c=C(t),l=X(r,c);r._update(c);let a={to:this.combinedDeviceList,from:i};this._notifyDeviceListChanged(a,(...h)=>this.emit(...h)),this.emit("bluetooth-device-list-changed",this.bluetoothDeviceList),l&&this.emit("device-offline-status-changed",c.offlineLoggingStatus.offlineStatus)}else console.warn(`No bluetooth device found with id ${t.id}`)},"devmgr:usb-device-added":function(t){let i=v(this.combinedDeviceList),o=new k(C(t)),n=this[m].usbDeviceList;n.find(c=>t.id===c.id)?console.warn(`USB Device (id=${t.id}): already in DeviceManager`):n.push(o);let r={to:this.combinedDeviceList,from:i};this._notifyDeviceListChanged(r,(...c)=>this.emit(...c))},"devmgr:usb-device-removed":function(t){let i=v(this.combinedDeviceList),{usbDeviceList:o}=this[m],n=o.findIndex(r=>r.id===t.id);if(n!==-1){let r=o[n];o.splice(n,1),r.off();let c={to:this.combinedDeviceList,from:i};this._notifyDeviceListChanged(c,(...l)=>this.emit(...l))}else console.warn(`No USB device found with id ${t.id}`)},"devmgr:usb-device-updated":function(t){let i=v(this.combinedDeviceList),{usbDeviceList:o}=this[m],n=o.find(r=>r.id===t.id);if(n){let r=C(t),c=X(n,r);n._update(r);let l={to:this.combinedDeviceList,from:i};this._notifyDeviceListChanged(l,(...a)=>this.emit(...a)),c&&this.emit("device-offline-status-changed",r.offlineLoggingStatus.offlineStatus)}else console.warn(`No USB device found with id ${t.id}`)},"devmgr:calibration-step-result":function(t){let o=this[m].usbDeviceList.concat(this[m].bluetoothDeviceList).find(n=>n.id===t.id);o?o.updateCalibrationStep({result:t.result}):console.warn(`No device found with id ${t.id}`)},"devmgr:device-attributes-changed":function(t){let o=v(this.combinedDeviceList).find(n=>n.id===t.deviceId);o&&o._update({deviceAttributes:t.deviceAttributes})}},Y={eventHandlers:Xe,priv:m};var Z=e=>{let t={};return t.usbDeviceList=e.usbDeviceList,t.bluetoothDeviceList=e.bluetoothDeviceList,t.bluetoothAvailable=e.bluetoothAvailable,t.bluetoothIsDiscovering=e.bluetoothIsDiscovering,t.bluetoothDiscoveryMode=e.bluetoothDiscoveryMode,t},J=async(e,t)=>{let{eventHandlers:i,priv:o}=Y;e[o].bluetoothIsDiscovering=t.bluetoothIsDiscovering,e[o].bluetoothDiscoveryMode=t.bluetoothDiscoveryMode,i["devmgr:bluetooth-available"].call(e,{available:t.bluetoothAvailable}),await d(1),t.bluetoothDeviceList.forEach(async n=>{i["devmgr:bluetooth-device-discovered"].call(e,n)}),await d(1),t.usbDeviceList.forEach(async n=>{i["devmgr:usb-device-added"].call(e,n)}),await d(10)};var Ye=async e=>e.sendRequest("GET_HOST_STATE"),Ze=e=>e.sendRequest("CLIENT_STATE_RESTORED"),At=async e=>{let{rpc:t,dataCollection:i,dataWorld:o,deviceManager:n,sensorWorld:r}=e,c=await Ye(t);console.log("===== HOST SERVICE STATE (to client) ====="),console.dir(c);try{console.log("=== Import DeviceManager"),await J(n,c.deviceManager),console.log("=== Import SensorWorld"),await j(r,c.sensorWorld),console.log("=== Import DataWorld"),await N(o,c.dataWorld),console.log("=== Import DataCollection"),await V(i,c.dataCollection)}catch(l){console.dir(l)}Ze(t)},K=async e=>{let{dataCollection:t,dataWorld:i,deviceManager:o,sensorWorld:n}=e;return()=>{console.log("===== HOST SERVICE STATE (from host) =====");let r={dataCollection:q(t),dataWorld:R(i),deviceManager:Z(o),sensorWorld:U(n)};return console.dir(r),r}};var Q=class extends O{constructor(t="DataCollection.js",i=!0,o="./sw.js"){super();this.nativeModulesScriptSource=t,this.appHasDeviceAccess=i,this.serviceWorkerLocation=o,this._updating=null,this.addEventListener("new-serviceworker-ready",()=>{this._newServiceWorkerReady=!0},{once:!0}),this._setupFrameMessageChannel=this.setupFrameMessageChannel.bind(this),window.addEventListener("message",this._setupFrameMessageChannel)}get authoringMode(){return this._authoringMode}set authoringMode(t){throw new Error(`authoringMode is read-only and cannot be changed here. The current value is ${this._authoringMode} and cannot be changed to ${t}`)}get activeServiceWorker(){return this.registration.active}get waitingServiceWorker(){return this.registration.waiting}get incomingServiceWorker(){return this.registration.installing}get allAvailableServiceworkers(){return[this.incomingServiceWorker,this.waitingServiceWorker,this.activeServiceWorker].filter(t=>t)}get priorInstalledServiceWorkerNeverUpdated(){return this.waitingServiceWorker&&this.activeServiceWorker}get newServiceWorkerReady(){return new Promise(t=>{this._newServiceWorkerReady?t(this):this.addEventListener("new-serviceworker-ready",()=>t(this),{once:!0})})}get isFirstInstallOfServiceWorker(){return this.incomingServiceWorker&&!this.activeServiceWorker}get isFirstInstallComplete(){return this.waitingServiceWorker?.state==="installed"&&!this.activeServiceWorker}get isUpdateInstallComplete(){return this.waitingServiceWorker?.state==="installed"&&this.activeServiceWorker}get updateComplete(){return new Promise(t=>this._updating!==null?t(window._updateAvailable):(this.addEventListener("update-available",()=>{t(!0)},{once:!0}),this.addEventListener("upate-not-found",()=>{t(!1)},{once:!0}),!0))}get _joinedSession(){return this.__joinedSession}set _joinedSession(t){this.__joinedSession=t,this.dispatchEvent(new Event("joined-session"))}get joinedSession(){return this._joinedSession?Promise.resolve(this.activeServiceWorker):new Promise(t=>{this.addEventListener("joined-session",()=>{t(this.activeServiceWorker)},{once:!0})})}async setupFrameMessageChannel(t){try{t.data.type==="CLIENT_FRAME_SETUP"&&(window._frameFeatures=t.data.frameFeatures,this._authoringMode=t.data.authoringMode)}catch(i){console.error(i)}t.data.type==="setup_message_channel"&&([this.hostMessageChannel]=t.ports,t.data.templateFile&&(this._templateFile=new File([t.data.templateFile],"template.gambl",{type:"application/x-gambl"})),t.data.demoMode&&(this._demoMode=t.data.demoMode),this._authoringMode=t.data.building,window.removeEventListener("message",this._setupFrameMessageChannel),delete this._setupFrameMessageChannel)}raiseEventsForIncomingMessages(){navigator.serviceWorker.addEventListener("message",({data:{type:t}})=>{this.dispatchEvent(new Event(t))})}finishInstallAndNotify(){this._updating=!0,this.raiseEventsForIncomingMessages(),this.incomingServiceWorker.addEventListener("statechange",()=>{this.isUpdateInstallComplete&&this.notifyUpdateAvailable()})}onInstallTakeControl(){!this.isFirstInstallComplete||(this._firstInstall=!0,navigator.serviceWorker.addEventListener("controllerchange",()=>{this.dispatchEvent(new Event("first-install-complete")),this.dispatchEvent(new Event("new-serviceworker-ready")),this.joinSession()},{once:!0}),this.waitingServiceWorker.postMessage({type:"FIRST_INSTALL"}))}async notifyHostInitialized(t){return this.hostMessageChannel?(this.getHostServiceState=await K(t),await this.newServiceWorkerReady,this.activeServiceWorker.postMessage({type:"WASM_READY"}),this.hostMessageChannel.postMessage("host_ready"),this):this}async init(){if(this.registration)return this;if(!("serviceWorker"in navigator)){let{handleCordova:t}=await import("./handleCordova-MXF5AJC6.js");return t()}if(this.registration=await navigator.serviceWorker.register(this.serviceWorkerLocation,{scope:"./"}),this.allAvailableServiceworkers.forEach(t=>t.postMessage({type:window.location.search.includes("demo-mode")?"DEMO-MODE":"NOT-DEMO-MODE"})),this.registration){this.registration.addEventListener("updatefound",()=>this.finishInstallAndNotify());try{await this.registration.update(),await d()}catch(t){navigator.onLine?console.error(t):console.warn("Cannot perform a serviceworker update while offline. Skipping update.")}this._updating===null&&this.dispatchEvent(new Event("no-update-found")),this._updating=!1,this.priorInstalledServiceWorkerNeverUpdated&&this.notifyUpdateAvailable(),navigator.serviceWorker.addEventListener("controllerchange",()=>{this._firstInstall})}return this.isFirstInstallOfServiceWorker?this.incomingServiceWorker.addEventListener("statechange",()=>this.onInstallTakeControl()):(await navigator.serviceWorker.ready,this.dispatchEvent(new Event("new-serviceworker-ready")),this.joinSession()),this}notifyUpdateAvailable(){this.activeServiceWorker.postMessage({type:"SKIP_WAITING",claim:!0}),this._updating=!1}skipWaitingAndClaim(){this.waitingServiceWorker.postMessage({type:"SKIP_WAITING",claim:!0})}triggerNativeModulesLoad(){let t=document.querySelector("head"),i=document.createElement("script");i.src=this.nativeModulesScriptSource,t.append(i),window.frameElement?.toggleAttribute("host",!0)}async handleSessionMessages(t){let{data:i}=t,{type:o,host:n}=i;if(o==="JOINED"){if(n){if(this.triggerNativeModulesLoad(),this.appHasDeviceAccess){let{hostDevices:r}=await import("./hostDevices-V3QBJ5XK.js");r(this.activeServiceWorker)}}else{if(window.__isSessionClient=!0,this.appHasDeviceAccess){let{proxyDeviceCalls:r}=await import("./proxyDeviceCalls-DOA4YPUC.js");r(this.activeServiceWorker)}window.frameElement?.toggleAttribute("host",!1)}window.wasmModuleReady?this.activeServiceWorker.postMessage({type:"WASM_READY"}):document.addEventListener("wasm-ready",()=>{this.activeServiceWorker.postMessage({type:"WASM_READY"})})}o==="WASM_READY"&&(typeof window.Module.postRun=="function"&&window.Module.postRun(),this._joinedSession=!0)}async joinSession(){}},Rt=new Q;export{p as a,d as b,x as c,Y as d,At as e,Rt as f};
